<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0511.1508                               -->
<workbook original-version='18.1' source-build='2023.1.2 (20231.23.0511.1508)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <BasicButtonObjectTextSupport />
    <CascadingFilters />
    <CascadingFiltersHamburgerUI />
    <CollapsiblePane />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
    <ZoneVisibilityControl />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Category Parameter' datatype='string' name='[Category Parameter]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
      <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='25'>
        <calculation class='tableau' formula='25' />
        <members>
          <member value='25' />
          <member value='50' />
          <member value='100' />
        </members>
      </column>
      <column caption='Top N' datatype='integer' default-format='N' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range max='800' min='1' />
      </column>
      <column caption='Top 50' datatype='integer' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='50'>
        <calculation class='tableau' formula='50' />
      </column>
      <column caption='Select Reference Date' datatype='date' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='#2023-12-17#'>
        <calculation class='tableau' formula='#2023-12-17#' />
      </column>
      <column caption='Region Parameter' datatype='string' name='[Region Parameter]' param-domain-type='any' role='measure' type='nominal' value='&quot;Central&quot;'>
        <calculation class='tableau' formula='&quot;Central&quot;' />
      </column>
      <column caption='View by' datatype='string' name='[Sub-Category Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
        <calculation class='tableau' formula='&quot;Region&quot;' />
        <members>
          <member value='&quot;Region&quot;' />
          <member value='&quot;Category&quot;' />
          <member value='&quot;Sub-Category&quot;' />
        </members>
      </column>
      <column caption='Sub-Category Parameter' datatype='string' name='[Sub-Category Parameter]' param-domain-type='any' role='measure' type='nominal' value='&quot;Accessories&quot;'>
        <calculation class='tableau' formula='&quot;Accessories&quot;' />
      </column>
    </datasource>
    <datasource caption='Sample - Superstore' inline='true' name='federated.1n591da1jfszub11jpy521dzq3dk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.194b33d0hc40s312vlysc1mcuh9d'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/ratan/Downloads/Sample - Superstore.xls' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.194b33d0hc40s312vlysc1mcuh9d' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:1' lost='0' outcome='1' processed='81352'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.194b33d0hc40s312vlysc1mcuh9d' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:1' lost='0' outcome='1' processed='81352'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>81352</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_13AAF21BD1F8438F937915581912F1D9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:sum:Profit:qk:2]&quot;' value='Profit %' />
          <alias key='&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:sum:Sales:qk:5]&quot;' value='Sales %' />
        </aliases>
      </column>
      <column caption='Customer Rank' datatype='integer' name='[Calculation_142707839788208133]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([Sales]), &apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ranks' datatype='string' name='[Calculation_142707839794692105]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_142707839788208133] = 25 OR [Calculation_142707839788208133] = 50 OR [Calculation_142707839788208133] = 100 THEN&#13;&#10;    ATTR([Customer Name]) + &quot; - &quot; + STR(SUM([Sales]))&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='New Order Date' datatype='date' name='[Calculation_142707839798812682]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;year&apos;, TODAY()))' />
      </column>
      <column caption='YTD sales' datatype='real' name='[Calculation_142707839799164939]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_142707840517505041]&lt;=TODAY()&#13;&#10;AND&#13;&#10;DATEDIFF(&quot;year&quot;,[Calculation_142707840517505041],TODAY())=0&#13;&#10;THEN [Sales]&#13;&#10;END' />
      </column>
      <column caption='QTD Sales' datatype='real' name='[Calculation_142707839799435276]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_142707840517505041]&lt;=TODAY()&#13;&#10;AND&#13;&#10;DATEDIFF(&quot;quarter&quot;,[Calculation_142707840517505041],TODAY())=0&#13;&#10;THEN [Sales]&#13;&#10;END' />
      </column>
      <column caption='MTD sales' datatype='real' name='[Calculation_142707839799595021]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_142707840517505041]&lt;=TODAY()&#13;&#10;AND&#13;&#10;DATEDIFF(&quot;month&quot;,[Calculation_142707840517505041],TODAY())=0&#13;&#10;THEN [Sales]&#13;&#10;END' />
      </column>
      <column caption='First order' datatype='date' name='[Calculation_142707839802765326]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Customer Name] : MIN([Order Date]) }' />
      </column>
      <column caption='Last Order ' datatype='date' name='[Calculation_142707839803060239]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Customer Name] : MAX([Order Date]) }' />
      </column>
      <column caption='newdate2' datatype='date' name='[Calculation_142707840516386832]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='MAKEDATE(YEAR(TODAY()), MONTH([Order Date]), DAY([Order Date]))' />
      </column>
      <column caption=' newdate 2023' datatype='datetime' name='[Calculation_142707840517505041]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEADD(&apos;year&apos;, 1, [Order Date])' />
      </column>
      <column caption='Case ' datatype='string' name='[Calculation_142707840530206739]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Sub-Category Parameter (copy)]&#13;&#10;   WHEN &apos;Region&apos; THEN [Region]&#13;&#10;   WHEN &apos;Category&apos; THEN [Category]&#13;&#10;   WHEN &apos;Sub-Category&apos; THEN [Sub-Category]&#13;&#10;END' />
      </column>
      <column caption='null' datatype='integer' name='[Calculation_1592022501924343808]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(COUNT([Sales]))' />
      </column>
      <column caption='Year' datatype='integer' name='[Calculation_1592022501930512385]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='YEAR([Parameters].[Parameter 4])' />
      </column>
      <column caption='Quarter' datatype='integer' name='[Calculation_1592022501930696706]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='QUARTER([Parameters].[Parameter 4])' />
      </column>
      <column caption='Month' datatype='string' name='[Calculation_1592022501930942467]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATENAME(&apos;month&apos;,[Parameters].[Parameter 4])' />
      </column>
      <column caption='Sales color' datatype='string' name='[Calculation_268527160796651521]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([Sales]) &gt; 100000 THEN &quot;Green&quot;&#13;&#10;ELSEIF SUM([Sales]) &gt;= 10000 AND SUM([Sales])&lt;= 100000 THEN &quot;Orange&quot;&#13;&#10;ELSE &quot;Red&quot;&#13;&#10;END' />
      </column>
      <column caption='Zero Axis' datatype='integer' name='[Calculation_268527161120133122]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0' />
      </column>
      <column caption='Current Year sales ' datatype='real' name='[Calculation_268527161133690883]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([Order Date])={MAX(YEAR([Order Date]))}&#13;&#10;THEN [Sales]&#13;&#10;END' />
      </column>
      <column caption='Previous Year sales' datatype='real' name='[Calculation_268527161134268420]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([Order Date]) = {MAX(YEAR([Order Date]))}-1&#13;&#10;THEN [Sales]&#13;&#10;END' />
      </column>
      <column caption='YoY growth' datatype='real' name='[Calculation_268527161136869381]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Calculation_268527161133690883])- SUM([Calculation_268527161134268420])) / SUM([Calculation_268527161134268420])' />
      </column>
      <column caption='Growth icon' datatype='string' name='[Calculation_268527161139097606]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_268527161136869381] &gt; 0 THEN &quot;▲&quot;&#13;&#10;END' />
      </column>
      <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
      </column>
      <column caption='index' datatype='integer' name='[Calculation_486951743751315456]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc level-address='[federated.1n591da1jfszub11jpy521dzq3dk].[Product Name]' ordering-type='Field'>
            <order field='[federated.1n591da1jfszub11jpy521dzq3dk].[Product Name]' />
            <order field='[federated.1n591da1jfszub11jpy521dzq3dk].[Segment]' />
            <sort direction='DESC' using='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Quantity:qk]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='year?' datatype='boolean' name='[Calculation_486951743762169857]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='YEAR([Order Date])=YEAR([Parameters].[Parameter 4]) and [Calculation_142707840517505041]&lt;=[Parameters].[Parameter 4]' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Product Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Product Name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;3M Hangers With Command Adhesive, 3M Office Air Cleaner, 3M Organizer Strips and 3 more&quot;'>
            <value>&quot;3M Hangers With Command Adhesive&quot;</value>
            <value>&quot;3M Office Air Cleaner&quot;</value>
            <value>&quot;3M Organizer Strips&quot;</value>
            <value>&quot;3M Polarizing Light Filter Sleeves&quot;</value>
            <value>&quot;3M Polarizing Task Lamp with Clamp Arm, Light Gray&quot;</value>
            <value>&quot;3M Replacement Filter for Office Air Cleaner for 20&apos; x 33&apos; Room&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Acco 3-Hole Punch, Acco 6 Outlet Guardian Basic Surge Suppressor, Acco 6 Outlet Guardian Premium Plus Surge Suppressor and 34 more&quot;'>
            <value>&quot;Acco 3-Hole Punch&quot;</value>
            <value>&quot;Acco 6 Outlet Guardian Basic Surge Suppressor&quot;</value>
            <value>&quot;Acco 6 Outlet Guardian Premium Plus Surge Suppressor&quot;</value>
            <value>&quot;Acco 6 Outlet Guardian Premium Surge Suppressor&quot;</value>
            <value>&quot;Acco 6 Outlet Guardian Standard Surge Suppressor&quot;</value>
            <value>&quot;Acco 7-Outlet Masterpiece Power Center, Wihtout Fax/Phone Line Protection&quot;</value>
            <value>&quot;Acco Banker&apos;s Clasps, 5 3/4\&quot;-Long&quot;</value>
            <value>&quot;Acco Clips to Go Binder Clips, 24 Clips in Two Sizes&quot;</value>
            <value>&quot;Acco D-Ring Binder w/DublLock&quot;</value>
            <value>&quot;Acco Data Flex Cable Posts For Top &amp; Bottom Load Binders, 6\&quot; Capacity&quot;</value>
            <value>&quot;Acco Economy Flexible Poly Round Ring Binder&quot;</value>
            <value>&quot;Acco Expandable Hanging Binders&quot;</value>
            <value>&quot;Acco Flexible ACCOHIDE Square Ring Data Binder, Dark Blue, 11 1/2\&quot; X 14\&quot; 7/8\&quot;&quot;</value>
            <value>&quot;Acco Four Pocket Poly Ring Binder with Label Holder, Smoke, 1\&quot;&quot;</value>
            <value>&quot;Acco Glide Clips&quot;</value>
            <value>&quot;Acco Hanging Data Binders&quot;</value>
            <value>&quot;Acco Hot Clips Clips to Go&quot;</value>
            <value>&quot;Acco Perma 2700 Stacking Storage Drawers&quot;</value>
            <value>&quot;Acco Perma 3000 Stacking Storage Drawers&quot;</value>
            <value>&quot;Acco Perma 4000 Stacking Storage Drawers&quot;</value>
            <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Dark Blue&quot;</value>
            <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Executive Red&quot;</value>
            <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Light Blue&quot;</value>
            <value>&quot;Acco Pressboard Covers with Storage Hooks, 9 1/2\&quot; x 11\&quot;, Executive Red&quot;</value>
            <value>&quot;Acco PRESSTEX Data Binder with Storage Hooks, Dark Blue, 14 7/8\&quot; X 11\&quot;&quot;</value>
            <value>&quot;Acco PRESSTEX Data Binder with Storage Hooks, Dark Blue, 9 1/2\&quot; X 11\&quot;&quot;</value>
            <value>&quot;Acco PRESSTEX Data Binder with Storage Hooks, Light Blue, 9 1/2\&quot; X 11\&quot;&quot;</value>
            <value>&quot;Acco Recycled 2\&quot; Capacity Laser Printer Hanging Data Binders&quot;</value>
            <value>&quot;Acco Side-Punched Conventional Columnar Pads&quot;</value>
            <value>&quot;Acco Six-Outlet Power Strip, 4&apos; Cord Length&quot;</value>
            <value>&quot;Acco Smartsocket Color-Coded Six-Outlet AC Adapter Model Surge Protectors&quot;</value>
            <value>&quot;Acco Smartsocket Table Surge Protector, 6 Color-Coded Adapter Outlets&quot;</value>
            <value>&quot;Acco Suede Grain Vinyl Round Ring Binder&quot;</value>
            <value>&quot;Acco Translucent Poly Ring Binders&quot;</value>
            <value>&quot;ACCOHIDE 3-Ring Binder, Blue, 1\&quot;&quot;</value>
            <value>&quot;ACCOHIDE Binder by Acco&quot;</value>
            <value>&quot;Accohide Poly Flexible Ring Binders&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Apple EarPods with Remote and Mic, Apple iPhone 5, Apple iPhone 5C and 4 more&quot;'>
            <value>&quot;Apple EarPods with Remote and Mic&quot;</value>
            <value>&quot;Apple iPhone 5&quot;</value>
            <value>&quot;Apple iPhone 5C&quot;</value>
            <value>&quot;Apple iPhone 5S&quot;</value>
            <value>&quot;iKross Bluetooth Portable Keyboard + Cell Phone Stand Holder + Brush for Apple iPhone 5S 5C 5, 4S 4&quot;</value>
            <value>&quot;LF Elite 3D Dazzle Designer Hard Case Cover, Lf Stylus Pen and Wiper For Apple Iphone 5c Mini Lite&quot;</value>
            <value>&quot;Seidio BD2-HK3IPH5-BK DILEX Case and Holster Combo for Apple iPhone 5/5s - Black&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Cush Cases Heavy Duty Rugged Cover Case for Samsung Galaxy S5 - Purple, OtterBox Commuter Series Case - Samsung Galaxy S4, OtterBox Defender Series Case - Samsung Galaxy S4 and 13 more&quot;'>
            <value>&quot;Cush Cases Heavy Duty Rugged Cover Case for Samsung Galaxy S5 - Purple&quot;</value>
            <value>&quot;OtterBox Commuter Series Case - Samsung Galaxy S4&quot;</value>
            <value>&quot;OtterBox Defender Series Case - Samsung Galaxy S4&quot;</value>
            <value>&quot;Samsung Convoy 3&quot;</value>
            <value>&quot;Samsung Galaxy Mega 6.3&quot;</value>
            <value>&quot;Samsung Galaxy Note 2&quot;</value>
            <value>&quot;Samsung Galaxy Note 3&quot;</value>
            <value>&quot;Samsung Galaxy S III - 16GB - pebble blue (T-Mobile)&quot;</value>
            <value>&quot;Samsung Galaxy S4&quot;</value>
            <value>&quot;Samsung Galaxy S4 Active&quot;</value>
            <value>&quot;Samsung Galaxy S4 Mini&quot;</value>
            <value>&quot;Samsung HM1900 Bluetooth Headset&quot;</value>
            <value>&quot;Samsung Replacement EH64AVFWE Premium Headset&quot;</value>
            <value>&quot;Samsung Rugby III&quot;</value>
            <value>&quot;Sannysis Cute Owl Design Soft Skin Case Cover for Samsung Galaxy S4&quot;</value>
            <value>&quot;Spigen Samsung Galaxy S5 Case Wallet&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Xerox 188, Xerox 1880, Xerox 1881 and 171 more&quot;'>
            <value>&quot;Xerox 188&quot;</value>
            <value>&quot;Xerox 1880&quot;</value>
            <value>&quot;Xerox 1881&quot;</value>
            <value>&quot;Xerox 1882&quot;</value>
            <value>&quot;Xerox 1883&quot;</value>
            <value>&quot;Xerox 1884&quot;</value>
            <value>&quot;Xerox 1885&quot;</value>
            <value>&quot;Xerox 1886&quot;</value>
            <value>&quot;Xerox 1887&quot;</value>
            <value>&quot;Xerox 1888&quot;</value>
            <value>&quot;Xerox 1889&quot;</value>
            <value>&quot;Xerox 189&quot;</value>
            <value>&quot;Xerox 1890&quot;</value>
            <value>&quot;Xerox 1891&quot;</value>
            <value>&quot;Xerox 1892&quot;</value>
            <value>&quot;Xerox 1893&quot;</value>
            <value>&quot;Xerox 1894&quot;</value>
            <value>&quot;Xerox 1895&quot;</value>
            <value>&quot;Xerox 1896&quot;</value>
            <value>&quot;Xerox 1897&quot;</value>
            <value>&quot;Xerox 1898&quot;</value>
            <value>&quot;Xerox 1899&quot;</value>
            <value>&quot;Xerox 19&quot;</value>
            <value>&quot;Xerox 190&quot;</value>
            <value>&quot;Xerox 1900&quot;</value>
            <value>&quot;Xerox 1901&quot;</value>
            <value>&quot;Xerox 1902&quot;</value>
            <value>&quot;Xerox 1903&quot;</value>
            <value>&quot;Xerox 1905&quot;</value>
            <value>&quot;Xerox 1906&quot;</value>
            <value>&quot;Xerox 1907&quot;</value>
            <value>&quot;Xerox 1908&quot;</value>
            <value>&quot;Xerox 1909&quot;</value>
            <value>&quot;Xerox 191&quot;</value>
            <value>&quot;Xerox 1910&quot;</value>
            <value>&quot;Xerox 1911&quot;</value>
            <value>&quot;Xerox 1912&quot;</value>
            <value>&quot;Xerox 1913&quot;</value>
            <value>&quot;Xerox 1914&quot;</value>
            <value>&quot;Xerox 1915&quot;</value>
            <value>&quot;Xerox 1916&quot;</value>
            <value>&quot;Xerox 1917&quot;</value>
            <value>&quot;Xerox 1918&quot;</value>
            <value>&quot;Xerox 1919&quot;</value>
            <value>&quot;Xerox 192&quot;</value>
            <value>&quot;Xerox 1920&quot;</value>
            <value>&quot;Xerox 1921&quot;</value>
            <value>&quot;Xerox 1922&quot;</value>
            <value>&quot;Xerox 1923&quot;</value>
            <value>&quot;Xerox 1924&quot;</value>
            <value>&quot;Xerox 1925&quot;</value>
            <value>&quot;Xerox 1926&quot;</value>
            <value>&quot;Xerox 1927&quot;</value>
            <value>&quot;Xerox 1928&quot;</value>
            <value>&quot;Xerox 1929&quot;</value>
            <value>&quot;Xerox 193&quot;</value>
            <value>&quot;Xerox 1930&quot;</value>
            <value>&quot;Xerox 1931&quot;</value>
            <value>&quot;Xerox 1932&quot;</value>
            <value>&quot;Xerox 1933&quot;</value>
            <value>&quot;Xerox 1934&quot;</value>
            <value>&quot;Xerox 1935&quot;</value>
            <value>&quot;Xerox 1936&quot;</value>
            <value>&quot;Xerox 1937&quot;</value>
            <value>&quot;Xerox 1938&quot;</value>
            <value>&quot;Xerox 1939&quot;</value>
            <value>&quot;Xerox 194&quot;</value>
            <value>&quot;Xerox 1940&quot;</value>
            <value>&quot;Xerox 1941&quot;</value>
            <value>&quot;Xerox 1942&quot;</value>
            <value>&quot;Xerox 1943&quot;</value>
            <value>&quot;Xerox 1944&quot;</value>
            <value>&quot;Xerox 1945&quot;</value>
            <value>&quot;Xerox 1946&quot;</value>
            <value>&quot;Xerox 1947&quot;</value>
            <value>&quot;Xerox 1948&quot;</value>
            <value>&quot;Xerox 1949&quot;</value>
            <value>&quot;Xerox 195&quot;</value>
            <value>&quot;Xerox 1950&quot;</value>
            <value>&quot;Xerox 1951&quot;</value>
            <value>&quot;Xerox 1952&quot;</value>
            <value>&quot;Xerox 1953&quot;</value>
            <value>&quot;Xerox 1954&quot;</value>
            <value>&quot;Xerox 1955&quot;</value>
            <value>&quot;Xerox 1956&quot;</value>
            <value>&quot;Xerox 1957&quot;</value>
            <value>&quot;Xerox 1958&quot;</value>
            <value>&quot;Xerox 1959&quot;</value>
            <value>&quot;Xerox 196&quot;</value>
            <value>&quot;Xerox 1960&quot;</value>
            <value>&quot;Xerox 1962&quot;</value>
            <value>&quot;Xerox 1963&quot;</value>
            <value>&quot;Xerox 1964&quot;</value>
            <value>&quot;Xerox 1965&quot;</value>
            <value>&quot;Xerox 1966&quot;</value>
            <value>&quot;Xerox 1967&quot;</value>
            <value>&quot;Xerox 1968&quot;</value>
            <value>&quot;Xerox 1969&quot;</value>
            <value>&quot;Xerox 197&quot;</value>
            <value>&quot;Xerox 1970&quot;</value>
            <value>&quot;Xerox 1971&quot;</value>
            <value>&quot;Xerox 1972&quot;</value>
            <value>&quot;Xerox 1973&quot;</value>
            <value>&quot;Xerox 1974&quot;</value>
            <value>&quot;Xerox 1975&quot;</value>
            <value>&quot;Xerox 1976&quot;</value>
            <value>&quot;Xerox 1977&quot;</value>
            <value>&quot;Xerox 1978&quot;</value>
            <value>&quot;Xerox 1979&quot;</value>
            <value>&quot;Xerox 198&quot;</value>
            <value>&quot;Xerox 1980&quot;</value>
            <value>&quot;Xerox 1981&quot;</value>
            <value>&quot;Xerox 1982&quot;</value>
            <value>&quot;Xerox 1983&quot;</value>
            <value>&quot;Xerox 1984&quot;</value>
            <value>&quot;Xerox 1985&quot;</value>
            <value>&quot;Xerox 1986&quot;</value>
            <value>&quot;Xerox 1987&quot;</value>
            <value>&quot;Xerox 1988&quot;</value>
            <value>&quot;Xerox 1989&quot;</value>
            <value>&quot;Xerox 199&quot;</value>
            <value>&quot;Xerox 1990&quot;</value>
            <value>&quot;Xerox 1991&quot;</value>
            <value>&quot;Xerox 1992&quot;</value>
            <value>&quot;Xerox 1993&quot;</value>
            <value>&quot;Xerox 1994&quot;</value>
            <value>&quot;Xerox 1995&quot;</value>
            <value>&quot;Xerox 1996&quot;</value>
            <value>&quot;Xerox 1997&quot;</value>
            <value>&quot;Xerox 1998&quot;</value>
            <value>&quot;Xerox 1999&quot;</value>
            <value>&quot;Xerox 2&quot;</value>
            <value>&quot;Xerox 20&quot;</value>
            <value>&quot;Xerox 200&quot;</value>
            <value>&quot;Xerox 2000&quot;</value>
            <value>&quot;Xerox 201&quot;</value>
            <value>&quot;Xerox 202&quot;</value>
            <value>&quot;Xerox 203&quot;</value>
            <value>&quot;Xerox 204&quot;</value>
            <value>&quot;Xerox 205&quot;</value>
            <value>&quot;Xerox 206&quot;</value>
            <value>&quot;Xerox 207&quot;</value>
            <value>&quot;Xerox 208&quot;</value>
            <value>&quot;Xerox 209&quot;</value>
            <value>&quot;Xerox 21&quot;</value>
            <value>&quot;Xerox 210&quot;</value>
            <value>&quot;Xerox 211&quot;</value>
            <value>&quot;Xerox 212&quot;</value>
            <value>&quot;Xerox 213&quot;</value>
            <value>&quot;Xerox 214&quot;</value>
            <value>&quot;Xerox 215&quot;</value>
            <value>&quot;Xerox 216&quot;</value>
            <value>&quot;Xerox 217&quot;</value>
            <value>&quot;Xerox 218&quot;</value>
            <value>&quot;Xerox 219&quot;</value>
            <value>&quot;Xerox 22&quot;</value>
            <value>&quot;Xerox 220&quot;</value>
            <value>&quot;Xerox 221&quot;</value>
            <value>&quot;Xerox 222&quot;</value>
            <value>&quot;Xerox 223&quot;</value>
            <value>&quot;Xerox 224&quot;</value>
            <value>&quot;Xerox 225&quot;</value>
            <value>&quot;Xerox 226&quot;</value>
            <value>&quot;Xerox 227&quot;</value>
            <value>&quot;Xerox 228&quot;</value>
            <value>&quot;Xerox 229&quot;</value>
            <value>&quot;Xerox 23&quot;</value>
            <value>&quot;Xerox 230&quot;</value>
            <value>&quot;Xerox 231&quot;</value>
            <value>&quot;Xerox 232&quot;</value>
            <value>&quot;Xerox 4200 Series MultiUse Premium Copy Paper (20Lb. and 84 Bright)&quot;</value>
            <value>&quot;Xerox Blank Computer Paper&quot;</value>
            <value>&quot;Xerox Color Copier Paper, 11\&quot; x 17\&quot;, Ream&quot;</value>
            <value>&quot;Xerox WorkCentre 6505DN Laser Multifunction Printer&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column aggregation='None' caption='Sales (bin)' datatype='integer' name='[Sales (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[Sales]' peg='0' size='10' />
      </column>
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_13AAF21BD1F8438F937915581912F1D9]' role='measure' type='quantitative' />
      <column-instance column='[Sales]' derivation='Count' name='[cnt:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Top 50 customers]' derivation='InOut' name='[io:Top 50 customers:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='false' value='Others' />
          <alias key='true' value='Top 50' />
        </aliases>
      </column-instance>
      <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sales (bin)]' derivation='None' name='[none:Sales (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sales]' derivation='Count' name='[pcto:cnt:Sales:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Sales (bin):ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Count' name='[pcto:cnt:Sales:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_268527160796651521]' derivation='User' name='[usr:Calculation_268527160796651521:nk]' pivot='key' type='nominal' />
      <group caption='Category Set' name='[Category Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='member' level='[Category]' member='%null%' />
        </groupfilter>
      </group>
      <group name='[Category, Region, Sub-Category (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Region Set' name='[Region Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='member' level='[Region]' member='%null%' />
        </groupfilter>
      </group>
      <group caption='Sub-Category Set' name='[Sub-Category Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Sub-Category]' />
          <groupfilter function='member' level='[Sub-Category]' member='%null%' />
        </groupfilter>
      </group>
      <group caption='Top 50 customers' name='[Top 50 customers]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 3]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country'>
          <field>[Country/Region]</field>
          <field>[Region]</field>
          <field>[State/Province]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Customer Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Adrian Shami&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Alyssa Tate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Annie Thurman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Barry Gonzalez&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bill Eplett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brian Derr&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carlos Meador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chris McAfee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Claudia Bergmann&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Damala Kotsonis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David Flashing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denny Ordway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ed Ludwig&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Erin Ashbrook&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fred Chung&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grant Thornton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Helen Andreada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamie Kunitz&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jeremy Farry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;John Castell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Julia West&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Katherine Murray&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kimberly Carter&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lindsay Shagiari&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marc Crier&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matt Collins&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michael Grace&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mike Kennedy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Neil Cohen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pamela Coakley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Penelope Sewall&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Randy Ferguson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Robert Barroso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ryan Akin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Scot Wooten&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sibella Parks&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sung Chung&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Theresa Coyne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonja Turnell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Victoria Pisteka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Bergman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alex Avila&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ann Chong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arthur Prichep&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benjamin Farhat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bradley Nguyen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bryan Spruell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad McGuire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Christy Brittain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Craig Molinari&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Darrin Martin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delfina Latchford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Doug Bickford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Emily Phan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Filia McAdams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;George Ashbrook&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Harold Pawlan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ivan Liston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jenna Caffey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jim Mitchum&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joni Wasserman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Karen Carlisle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kelly Lampkin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lela Donovan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Logan Haushalter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mark Hamilton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Max Ludwig&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michelle Lonsdale&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nat Carroll&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Noah Childs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paul Lucas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Phillip Flathmann&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rick Reed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Roy Collins&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sanjit Jacobs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sharelle Roach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Steven Cartwright&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tamara Willingham&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Toby Ritter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trudy Glocke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adam Hart&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allen Armold&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anna Gayman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barbara Fisher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beth Fritzler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brendan Murry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carl Jackson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Charles Sheldon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cindy Chapman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cynthia Arntzen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dave Hallsten&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dennis Kane&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Duane Huffman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Erica Bern&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Frank Hawley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Giulietta Baptist&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harry Olson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;James Galang&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jennifer Jackson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Joe Elijah&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Joy Daniels&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Karl Braun&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ken Dana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lena Radford&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luke Weiss&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mary Zewe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Meg Tillman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mick Crebagga&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Natalie Webber&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nora Pelletier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paul Van Hugh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ralph Arnett&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rob Dowd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ruben Ausman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sarah Brown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shirley Daniels&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stewart Visinsky&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thais Sissman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tom Ashbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Valerie Takahito&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alan Haines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andrew Gjertsen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bart Pistole&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bill Tyler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brooke Gillingham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carol Triggs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Christina VanderZanden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clytie Kelty&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dana Kaydos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;David Wiener&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dionis Lloyd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eileen Kiefer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eudokia Martin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fred Wasserman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greg Maxwell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Henry MacAllister&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Janet Molinari&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jesus Ocampo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;John Lee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Julie Prescott&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Katrina Willman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Larry Blacks&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lisa Ryan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maria Zettner&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Matthew Clasen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Michael Moore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mitch Webber&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Neola Schneider&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Patrick Bzostek&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peter Bühler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ricardo Emerson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roger Barcio&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sally Matthias&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sean Christensen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Speros Goranitis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Susan MacKendrick&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thomas Seio&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tracy Blumstein&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vivek Sundaresam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aimee Bixby&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Amy Cox&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Annie Zypern&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barry Pond&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bill Overfelt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brian Moss&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carlos Soltero&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chris Selesnick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clay Cheatham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dan Campbell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;David Kendrick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dianna Arnett&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Edward Becker&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Erin Creighton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fred Harton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greg Guthrie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Helen Wasserman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jane Waco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jeremy Lonsdale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;John Dryer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Juliana Krohn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Katherine Nockton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kristen Hastings&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lindsay Williams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marc Harrigan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Matt Collister&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michael Granlund&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mike Pelletier&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Neil Ducich&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pamela Stobb&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pete Armstrong&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Raymond Buch&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Robert Dilbeck&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ryan Crowe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scott Cohen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Skye Norling&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sung Pak&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Theresa Swint&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tony Chapman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Victoria Wilson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adam Shillingsburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen Goldenen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anna Häberlin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barry Blumstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Beth Paige&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brendan Sweed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carl Ludwig&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Charlotte Melton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cindy Schnelling&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cynthia Delaney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dave Kipp&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dennis Pardue&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Duane Noonan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Erica Hackney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frank Merwin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Giulietta Dortch&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Heather Jas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;James Lanier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jennifer Patt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Joe Kamberova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Joy Smith&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Katharine Harms&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ken Heidel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Linda Cazamias&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lycoris Saunders&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MaryBeth Skach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Melanie Seite&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mick Hernandez&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nathan Cano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nora Preis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pauline Chand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ralph Kennedy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rob Haberlin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ruben Dartt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sarah Foster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shirley Jackson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stuart Calhoun&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thea Hendricks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tom Boeckenhauer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vicky Freymann&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alejandro Savely&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Angele Hood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Art Foster&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ben Peterman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brad Thomas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bryan Davis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cathy Prescott&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Christopher Martinez&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Craig Carroll&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Darren Koutras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Debra Catini&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dorothy Wardle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emily Ducich&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Evan Henry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gene Hale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harold Dahlen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Irene Maddox&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jay Fein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jim Karlsson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joni Blumstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kalyca Meade&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kelly Andreada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laurel Workman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liz Willingham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mark Cousins&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Max Engle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Michelle Ellison&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nancy Lomonaco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicole Fjeld&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paul Gonzalez&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Phillina Ober&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rick Hansen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ross Baird&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sanjit Chand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shahid Hopkins&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Steve Chapman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tamara Dahlen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Toby Carlisle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Troy Staebel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zuschuss Carroll&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Hawkins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alex Grayson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ann Steele&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arthur Wiediger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benjamin Patterson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bradley Talbott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Candace McMahon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad Sievert&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chuck Clark&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Craig Reiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Darrin Sayre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Denise Leinenbach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Doug Jacobs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eric Barreto&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frank Atkinson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;George Bell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Harold Ryan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jack Garza&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jennifer Braxton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jim Radford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joseph Airdo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Karen Daniels&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kelly Williams&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lena Cacioppo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lori Olson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mark Packer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maxwell Schwartz&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michelle Moray&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nat Gilpin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Noel Staavos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paul MacIntyre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pierre Wener&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rick Wilson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Roy Französisch&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saphhira Shifley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shaun Chance&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Steven Roelle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tanja Norvell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Toby Swindell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trudy Schmidt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alejandro Ballentine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andy Yotov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arianne Irving&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Becky Pak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brad Eason&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bruce Geld&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cathy Armstrong&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Christine Sundaresam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Corinna Mitchell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dario Medina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Deanra Eno&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dorothy Badders&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elpida Rittenbach&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eva Jacobs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gary Mitchum&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guy Thornton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hunter Lopez&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jason Klamczynski&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jill Trafton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jonathan Doherty&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Justin MacKendrick&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laurel Beltran&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liz Preis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marina Lichtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maureen Gnade&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Michael Stewart&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Muhammed MacIntyre&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nick Zandusky&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Patrick O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Philip Fox&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rick Bensley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roland Schwarz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sandra Flanagan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seth Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stephanie Ulpright&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sylvia Foulston&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tim Taslimi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tracy Zic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yana Sorensen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adrian Barton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allen Rosenblatt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anne McFarland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Barry Franz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beth Thompson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brian Dahlen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carl Weiss&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chloris Kastensmidt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cindy Stewart&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cynthia Voltz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dave Poirier&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denny Blanton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ed Braxton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Erica Hernandez&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frank Olsen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Giulietta Weimer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Heather Kirkland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;James Peterman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jennifer Sheldon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Joel Eaton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Julia Barnett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Katherine Ducich&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ken Lonsdale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Linda Southworth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lynn Smith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mathew Reese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Michael Chen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mike Caudle&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nathan Gelder&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Odella Nelson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pauline Johnson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ralph Ritter&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rob Lucas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russell Applegate&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sarah Jordon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shirley Schmidt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stuart Van&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thea Hudgings&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tom Prescott&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Victor Preis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alan Hwang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Andrew Roberts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anthony O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bart Watters&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bobby Elias&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brosina Hoffman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Caroline Jumper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Christine Abelman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Corey Catlett&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daniel Byrd&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dean Braden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Don Jones&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eleni McCrary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eugene Barchas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gary Hansen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greg Tran&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Herbert Flentye&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jas O&apos;Carroll&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jill Fjeld&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;John Lucas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Justin Deggeller&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kean Nguyen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Larry Hughes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liz Carlisle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maribeth Dona&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Matthew Grinstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Michael Nguyen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mitch Willingham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Neoma Murray&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Patrick Gardner&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peter Fuller&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ricardo Sperren&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roger Demir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sam Craven&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sean Miller&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stefania Perrino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Susan Pistek&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thomas Thornton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tracy Collins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vivian Mathis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alan Schoenberger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andy Gerbode&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anthony Rawles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Becky Castell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bobby Odegard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bruce Degenhardt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cassandra Brandow&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Christine Kargatis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Corey Roper&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Daniel Lacy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dean Katz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Don Miller&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elizabeth Moffitt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eugene Hildebrand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gary Hwang&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guy Armstrong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hilary Holden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jason Fortune-&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jill Matthias&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;John Murray&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Justin Ellison&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kean Takahito&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Larry Tron&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liz MacKendrick&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maribeth Schnelling&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maureen Fritzler&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michael Oakman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monica Federle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nick Crebassa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Patrick Jones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peter McVee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Richard Bierner&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roland Fjeld&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sam Zeldin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sean O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stefanie Holloman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Susan Vittorini&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tiffany House&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tracy Hopkins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;William Brown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alejandro Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anemone Ratner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Art Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ben Ferrer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brad Norvell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bruce Stewart&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cathy Hwang&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Christopher Conant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Craig Carreira&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Darren Budd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deborah Brumfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dorothy Dickinson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Emily Burns&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Evan Bailliet&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gary Zandusky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hallie Redmond&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ionia McGrath&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jasper Cacioppo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jim Epp&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jonathan Howell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Justin Ritter&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Keith Herrera&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laurel Elliston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liz Thompson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maris LaWare&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maurice Satty&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Michelle Arnett&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Muhammed Yedwab&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicole Brennan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Patrick Ryan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Philisse Overcash&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rick Duston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rose O&apos;Brian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sandra Glassco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shahid Collister&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Steve Carroll&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tamara Chand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Toby Braunhardt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Troy Blackwell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yoseph Carroll&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aleksandra Gannaway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ann Blume&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Arthur Gainer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ben Wallace&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bradley Drucker&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bryan Mills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad Cunningham&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Christopher Schild&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Craig Leslie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Darren Powers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deirdre Greer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dorris liebe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emily Grady&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Evan Minnotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gene McClure&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Harold Engle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ivan Gibson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jay Kimmel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jim Kriz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joni Sundaresam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Karen Bern&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kelly Collister&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lauren Leatherbury&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Logan Currie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mark Haberlin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Max Jones&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Michelle Huthwaite&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Naresj Patel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicole Hansen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paul Knutson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Phillip Breyer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rick Huthwaite&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ross DeVincentis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sanjit Engle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shahid Shariari&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Steve Nguyen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tamara Manning&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Toby Gnade&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trudy Brown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zuschuss Donatelli&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alan Barnes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Amy Hunt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anthony Garverick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barry Weirich&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bill Shonely&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brian Stugart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carol Adams&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Christina Anderson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clay Ludtke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dan Lawera&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;David Philippe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dianna Vittorini&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Edward Hooks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Erin Mull&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fred Hopkins&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greg Hansen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henia Zydlo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Janet Lee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jeremy Pistek&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;John Grady&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Julie Creighton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Katrina Bavinger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kristina Nunn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lisa DeCherney&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maria Bertelson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Matt Connell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Kennedy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mike Vittorini&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Neil Französisch&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Parhena Norris&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pete Kriz&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Raymond Messe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Robert Marley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sally Hughsby&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scott Williamson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sonia Cooley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sung Shariari&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thomas Boland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tony Molinari&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vivek Gonzalez&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adrian Hane&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alyssa Crouse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anne Pryor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barry Französisch&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bill Donatelli&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brian DeCherney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carlos Daly&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chris Cortes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Claire Gute&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cyra Reiten&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;David Bremer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denny Joy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ed Jacobs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Erica Smith&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frank Preis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grace Kelly&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Helen Abelman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamie Frazer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jeremy Ellison&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Joel Jenkins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Julia Dunbar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Katherine Hughes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Khloe Miller&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lindsay Castell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Magdelene Morse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Matt Abelman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Michael Dominguez&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mike Gockenbach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nathan Mautz&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olvera Toch&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pauline Webber&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Randy Bradley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rob Williams&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russell D&apos;Ascenzo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Scot Coram&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shui Tom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sue Ann Reed&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Theone Pippenger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tom Stivers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Victoria Brennan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aaron Smayling&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alex Russell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anna Andreadi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ashley Jarboe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benjamin Venier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brenda Bowman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cari Sayre&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Charles Crestani&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chuck Magee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Craig Yedwab&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Darrin Van Huff&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denise Monton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Doug O&apos;Connell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eric Hoffmann&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frank Carlisle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;George Zrebassa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harry Greene&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jack Lebron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jennifer Ferguson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jim Sink&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joseph Holt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Karen Ferguson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ken Black&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lena Creighton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luke Foster&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mark Van Huff&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maya Herman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michelle Tran&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Natalie DeCherney&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nona Balk&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paul Prost&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quincy Jones&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ritsa Hightower&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roy Phan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sara Luxemburg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shaun Weien&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Steven Ward&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ted Butterfield&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Todd Boyes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Valerie Dominguez&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alan Shonely&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andy Reiter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Anthony Witt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Becky Martin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bobby Trafton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bruce Galang&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Catherine Glotzbach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Christine Phan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Corey-Lock&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daniel Raglin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dean percer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Don Weiss&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ellis Ballard&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eugene Moren&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gary McGarr&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guy Phonely&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hunter Glantz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jason Gross&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jill Stevenson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;John Stevenson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Justin Hirsh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kean Thornton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laura Armstrong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liz Pelletier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maribeth Yedwab&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maureen Gastineau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Michael Paige&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Muhammed Lee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nick Radford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Patrick O&apos;Brill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philip Brown&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Richard Eichhorn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roland Murray&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sample Company A&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sean Wendt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stephanie Phelps&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Suzanne McNair&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tim Brockman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tracy Poddar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Xylona Preis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alan Dominguez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Andrew Allen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anthony Jacobs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bart Folk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bill Stewart&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brian Thompson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carol Darley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Christina DeMoss&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clay Rozendal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dan Reichenbach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;David Smith&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dianna Wilson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Edward Nazzal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Erin Smith&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fred McMath&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greg Matthias&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Henry Goldwyn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Janet Martin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jessica Myrick&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;John Huston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Julie Kriz&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Katrina Edelman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kunst Miller&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lisa Hazard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maria Etezadi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Matt Hagelstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Michael Knudson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mitch Gastineau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Neil Knudson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Patricia Hirasaki&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pete Takahito&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Resi Pölking&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Robert Waldorf&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sally Knutson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sean Braxton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sonia Sunley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Susan Gilcrest&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thomas Brumley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tony Sayre&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vivek Grady&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adam Bellavance&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alice McCarthy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anna Chung&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astrea Jones&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Berenike Kampe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brendan Dodson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cari Schnelling&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Charles McCrossin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chuck Sachs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cyma Kinney&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dave Brooks&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dennis Bolton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Duane Benoit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eric Murdock&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frank Gastineau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia Rosenberg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harry Marie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jack O&apos;Briant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jennifer Halladay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jocasta Rupert&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Joy Bell-&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Karen Seio&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ken Brennan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lena Hernandez&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luke Schmidt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mary O&apos;Rourke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Meg O&apos;Connel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mick Brown&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Natalie Fritzler&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nora Paige&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paul Stevenson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rachel Payne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rob Beeghly&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Roy Skaria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sarah Bern&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sheri Gordon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stewart Carmichael&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ted Trevino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Todd Sumrall&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Valerie Mitchum&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Top 50 customers:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_268527160796651521:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Red&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:cnt:Sales:qk:1]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[cnt:Sales:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:cnt:Sales:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Ship Mode:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Standard Class&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;First Class&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Same Day&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Second Class&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]' type='palette'>
            <map to='#067d77'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top 50' datatype='integer' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='50'>
          <calculation class='tableau' formula='50' />
        </column>
        <column caption='Select Reference Date' datatype='date' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='#2023-12-17#'>
          <calculation class='tableau' formula='#2023-12-17#' />
        </column>
        <column caption='View by' datatype='string' name='[Sub-Category Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
          <calculation class='tableau' formula='&quot;Region&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_13AAF21BD1F8438F937915581912F1D9'>
            <properties context=''>
              <relation connection='excel-direct.194b33d0hc40s312vlysc1mcuh9d' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:1' lost='0' outcome='1' processed='81352'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_52752CBEACBA47B180672123835B5D44]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Q17' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Ship Mode' />
        <param name='target' value='Q17' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Category wise sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' value='n&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#a7eda7' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00b900' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</rows>
        <cols>[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{37732BA3-E8E0-4434-8E4B-29BC7774F62D}' />
    </worksheet>
    <worksheet name='Details'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='MDY' name='[md:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer ID]' derivation='None' name='[none:Customer ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product ID]' derivation='None' name='[none:Product ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Discount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[:Measure Names]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.1n591da1jfszub11jpy521dzq3dk].[:Measure Names]' value='auto' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Product Name:nk]' value='100' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ddebf0' />
            <format attr='band-color' scope='rows' value='#ddebf0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ddebf0' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1n591da1jfszub11jpy521dzq3dk].[none:Customer ID:nk] / ([federated.1n591da1jfszub11jpy521dzq3dk].[none:Customer Name:nk] / ([federated.1n591da1jfszub11jpy521dzq3dk].[none:Order ID:nk] / ([federated.1n591da1jfszub11jpy521dzq3dk].[md:Order Date:ok] / ([federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk] / ([federated.1n591da1jfszub11jpy521dzq3dk].[none:Sub-Category:nk] / ([federated.1n591da1jfszub11jpy521dzq3dk].[none:Product ID:nk] / [federated.1n591da1jfszub11jpy521dzq3dk].[none:Product Name:nk])))))))</rows>
        <cols>[federated.1n591da1jfszub11jpy521dzq3dk].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2BDDB237-4509-4B7F-AF5E-7055373C0120}' />
    </worksheet>
    <worksheet name='Monthly Trend'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' scope='rows' value='false' />
            <format attr='display' class='1' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' value='n&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00b900' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#a7eda7' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#a7eda7' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.66966849565505981' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk] + [federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk])</rows>
        <cols>[federated.1n591da1jfszub11jpy521dzq3dk].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{79449E1C-9C17-4CFB-9D3A-6BC6590A48FE}' />
    </worksheet>
    <worksheet name='Q1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Sub-Category:nk]'>
            <groupfilter count='1' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Sub-Category:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Order Date:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Sub-Category:nk]' value='128' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Sub-Category:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{E22C5D19-71BF-4FA3-B7A8-8AB1B20817B6}' />
    </worksheet>
    <worksheet name='Q10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' default-format='N' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='800' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Customer Name:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Quantity])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Customer Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Customer Name:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Customer Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{7FD0B252-6C74-4E33-B097-90736D1F2EEE}' />
    </worksheet>
    <worksheet name='Q11'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4854682D-BE3F-4273-A3AA-F18C38974796}' />
    </worksheet>
    <worksheet name='Q12'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='null' datatype='integer' name='[Calculation_1592022501924343808]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ZN(COUNT([Sales]))' />
            </column>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Sales (bin)' datatype='integer' name='[Sales (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[Sales]' peg='0' size='10' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Count' name='[cnt:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales (bin)]' derivation='None' name='[none:Sales (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Count' name='[pcto:cnt:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1592022501924343808]' derivation='User' name='[usr:Calculation_1592022501924343808:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-orientation' value='0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' value='0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='alternate-text' field='[federated.1n591da1jfszub11jpy521dzq3dk].[cnt:Sales:qk]' value='0' />
            <format attr='display-alternate-text' field='[federated.1n591da1jfszub11jpy521dzq3dk].[cnt:Sales:qk]' value='true' />
            <format attr='alternate-text' field='[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:cnt:Sales:qk]' value='0' />
            <format attr='display-alternate-text' field='[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:cnt:Sales:qk]' value='true' />
            <format attr='omit-on-special' field='[federated.1n591da1jfszub11jpy521dzq3dk].[cnt:Sales:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1n591da1jfszub11jpy521dzq3dk].[cnt:Sales:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1n591da1jfszub11jpy521dzq3dk].[cnt:Sales:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_1592022501924343808:qk]' />
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:cnt:Sales:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>Æ&#10;</run>
                <run fontcolor='#59a14f'><![CDATA[<[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:cnt:Sales:qk]>]]></run>
                <run fontcolor='#59a14f'>Æ&#10;</run>
                <run fontcolor='#59a14f'><![CDATA[<[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_1592022501924343808:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1n591da1jfszub11jpy521dzq3dk].[cnt:Sales:qk]</rows>
        <cols>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Sales (bin):ok]</cols>
        <show-full-range>
          <column>[federated.1n591da1jfszub11jpy521dzq3dk].[Sales (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{DE9304FB-71F0-41A3-8D58-B74F15D8ED5C}' />
    </worksheet>
    <worksheet name='Q13'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='Sales color' datatype='string' name='[Calculation_268527160796651521]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Sales]) &gt; 100000 THEN &quot;Green&quot;&#13;&#10;ELSEIF SUM([Sales]) &gt;= 10000 AND SUM([Sales])&lt;= 100000 THEN &quot;Orange&quot;&#13;&#10;ELSE &quot;Red&quot;&#13;&#10;END' />
            </column>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527160796651521]' derivation='User' name='[usr:Calculation_268527160796651521:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_268527160796651521:nk]' />
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1n591da1jfszub11jpy521dzq3dk].[none:Country/Region:nk] / ([federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk] / ([federated.1n591da1jfszub11jpy521dzq3dk].[none:State/Province:nk] / [federated.1n591da1jfszub11jpy521dzq3dk].[none:City:nk])))</rows>
        <cols />
      </table>
      <simple-id uuid='{451D7075-1D65-4E2C-9226-5956EFE2A2E3}' />
    </worksheet>
    <worksheet name='Q14'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Product Name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;3M Hangers With Command Adhesive, 3M Office Air Cleaner, 3M Organizer Strips and 3 more&quot;'>
                  <value>&quot;3M Hangers With Command Adhesive&quot;</value>
                  <value>&quot;3M Office Air Cleaner&quot;</value>
                  <value>&quot;3M Organizer Strips&quot;</value>
                  <value>&quot;3M Polarizing Light Filter Sleeves&quot;</value>
                  <value>&quot;3M Polarizing Task Lamp with Clamp Arm, Light Gray&quot;</value>
                  <value>&quot;3M Replacement Filter for Office Air Cleaner for 20&apos; x 33&apos; Room&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Acco 3-Hole Punch, Acco 6 Outlet Guardian Basic Surge Suppressor, Acco 6 Outlet Guardian Premium Plus Surge Suppressor and 34 more&quot;'>
                  <value>&quot;Acco 3-Hole Punch&quot;</value>
                  <value>&quot;Acco 6 Outlet Guardian Basic Surge Suppressor&quot;</value>
                  <value>&quot;Acco 6 Outlet Guardian Premium Plus Surge Suppressor&quot;</value>
                  <value>&quot;Acco 6 Outlet Guardian Premium Surge Suppressor&quot;</value>
                  <value>&quot;Acco 6 Outlet Guardian Standard Surge Suppressor&quot;</value>
                  <value>&quot;Acco 7-Outlet Masterpiece Power Center, Wihtout Fax/Phone Line Protection&quot;</value>
                  <value>&quot;Acco Banker&apos;s Clasps, 5 3/4\&quot;-Long&quot;</value>
                  <value>&quot;Acco Clips to Go Binder Clips, 24 Clips in Two Sizes&quot;</value>
                  <value>&quot;Acco D-Ring Binder w/DublLock&quot;</value>
                  <value>&quot;Acco Data Flex Cable Posts For Top &amp; Bottom Load Binders, 6\&quot; Capacity&quot;</value>
                  <value>&quot;Acco Economy Flexible Poly Round Ring Binder&quot;</value>
                  <value>&quot;Acco Expandable Hanging Binders&quot;</value>
                  <value>&quot;Acco Flexible ACCOHIDE Square Ring Data Binder, Dark Blue, 11 1/2\&quot; X 14\&quot; 7/8\&quot;&quot;</value>
                  <value>&quot;Acco Four Pocket Poly Ring Binder with Label Holder, Smoke, 1\&quot;&quot;</value>
                  <value>&quot;Acco Glide Clips&quot;</value>
                  <value>&quot;Acco Hanging Data Binders&quot;</value>
                  <value>&quot;Acco Hot Clips Clips to Go&quot;</value>
                  <value>&quot;Acco Perma 2700 Stacking Storage Drawers&quot;</value>
                  <value>&quot;Acco Perma 3000 Stacking Storage Drawers&quot;</value>
                  <value>&quot;Acco Perma 4000 Stacking Storage Drawers&quot;</value>
                  <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Dark Blue&quot;</value>
                  <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Executive Red&quot;</value>
                  <value>&quot;Acco Pressboard Covers with Storage Hooks, 14 7/8\&quot; x 11\&quot;, Light Blue&quot;</value>
                  <value>&quot;Acco Pressboard Covers with Storage Hooks, 9 1/2\&quot; x 11\&quot;, Executive Red&quot;</value>
                  <value>&quot;Acco PRESSTEX Data Binder with Storage Hooks, Dark Blue, 14 7/8\&quot; X 11\&quot;&quot;</value>
                  <value>&quot;Acco PRESSTEX Data Binder with Storage Hooks, Dark Blue, 9 1/2\&quot; X 11\&quot;&quot;</value>
                  <value>&quot;Acco PRESSTEX Data Binder with Storage Hooks, Light Blue, 9 1/2\&quot; X 11\&quot;&quot;</value>
                  <value>&quot;Acco Recycled 2\&quot; Capacity Laser Printer Hanging Data Binders&quot;</value>
                  <value>&quot;Acco Side-Punched Conventional Columnar Pads&quot;</value>
                  <value>&quot;Acco Six-Outlet Power Strip, 4&apos; Cord Length&quot;</value>
                  <value>&quot;Acco Smartsocket Color-Coded Six-Outlet AC Adapter Model Surge Protectors&quot;</value>
                  <value>&quot;Acco Smartsocket Table Surge Protector, 6 Color-Coded Adapter Outlets&quot;</value>
                  <value>&quot;Acco Suede Grain Vinyl Round Ring Binder&quot;</value>
                  <value>&quot;Acco Translucent Poly Ring Binders&quot;</value>
                  <value>&quot;ACCOHIDE 3-Ring Binder, Blue, 1\&quot;&quot;</value>
                  <value>&quot;ACCOHIDE Binder by Acco&quot;</value>
                  <value>&quot;Accohide Poly Flexible Ring Binders&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Apple EarPods with Remote and Mic, Apple iPhone 5, Apple iPhone 5C and 4 more&quot;'>
                  <value>&quot;Apple EarPods with Remote and Mic&quot;</value>
                  <value>&quot;Apple iPhone 5&quot;</value>
                  <value>&quot;Apple iPhone 5C&quot;</value>
                  <value>&quot;Apple iPhone 5S&quot;</value>
                  <value>&quot;iKross Bluetooth Portable Keyboard + Cell Phone Stand Holder + Brush for Apple iPhone 5S 5C 5, 4S 4&quot;</value>
                  <value>&quot;LF Elite 3D Dazzle Designer Hard Case Cover, Lf Stylus Pen and Wiper For Apple Iphone 5c Mini Lite&quot;</value>
                  <value>&quot;Seidio BD2-HK3IPH5-BK DILEX Case and Holster Combo for Apple iPhone 5/5s - Black&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Cush Cases Heavy Duty Rugged Cover Case for Samsung Galaxy S5 - Purple, OtterBox Commuter Series Case - Samsung Galaxy S4, OtterBox Defender Series Case - Samsung Galaxy S4 and 13 more&quot;'>
                  <value>&quot;Cush Cases Heavy Duty Rugged Cover Case for Samsung Galaxy S5 - Purple&quot;</value>
                  <value>&quot;OtterBox Commuter Series Case - Samsung Galaxy S4&quot;</value>
                  <value>&quot;OtterBox Defender Series Case - Samsung Galaxy S4&quot;</value>
                  <value>&quot;Samsung Convoy 3&quot;</value>
                  <value>&quot;Samsung Galaxy Mega 6.3&quot;</value>
                  <value>&quot;Samsung Galaxy Note 2&quot;</value>
                  <value>&quot;Samsung Galaxy Note 3&quot;</value>
                  <value>&quot;Samsung Galaxy S III - 16GB - pebble blue (T-Mobile)&quot;</value>
                  <value>&quot;Samsung Galaxy S4&quot;</value>
                  <value>&quot;Samsung Galaxy S4 Active&quot;</value>
                  <value>&quot;Samsung Galaxy S4 Mini&quot;</value>
                  <value>&quot;Samsung HM1900 Bluetooth Headset&quot;</value>
                  <value>&quot;Samsung Replacement EH64AVFWE Premium Headset&quot;</value>
                  <value>&quot;Samsung Rugby III&quot;</value>
                  <value>&quot;Sannysis Cute Owl Design Soft Skin Case Cover for Samsung Galaxy S4&quot;</value>
                  <value>&quot;Spigen Samsung Galaxy S5 Case Wallet&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Xerox 188, Xerox 1880, Xerox 1881 and 171 more&quot;'>
                  <value>&quot;Xerox 188&quot;</value>
                  <value>&quot;Xerox 1880&quot;</value>
                  <value>&quot;Xerox 1881&quot;</value>
                  <value>&quot;Xerox 1882&quot;</value>
                  <value>&quot;Xerox 1883&quot;</value>
                  <value>&quot;Xerox 1884&quot;</value>
                  <value>&quot;Xerox 1885&quot;</value>
                  <value>&quot;Xerox 1886&quot;</value>
                  <value>&quot;Xerox 1887&quot;</value>
                  <value>&quot;Xerox 1888&quot;</value>
                  <value>&quot;Xerox 1889&quot;</value>
                  <value>&quot;Xerox 189&quot;</value>
                  <value>&quot;Xerox 1890&quot;</value>
                  <value>&quot;Xerox 1891&quot;</value>
                  <value>&quot;Xerox 1892&quot;</value>
                  <value>&quot;Xerox 1893&quot;</value>
                  <value>&quot;Xerox 1894&quot;</value>
                  <value>&quot;Xerox 1895&quot;</value>
                  <value>&quot;Xerox 1896&quot;</value>
                  <value>&quot;Xerox 1897&quot;</value>
                  <value>&quot;Xerox 1898&quot;</value>
                  <value>&quot;Xerox 1899&quot;</value>
                  <value>&quot;Xerox 19&quot;</value>
                  <value>&quot;Xerox 190&quot;</value>
                  <value>&quot;Xerox 1900&quot;</value>
                  <value>&quot;Xerox 1901&quot;</value>
                  <value>&quot;Xerox 1902&quot;</value>
                  <value>&quot;Xerox 1903&quot;</value>
                  <value>&quot;Xerox 1905&quot;</value>
                  <value>&quot;Xerox 1906&quot;</value>
                  <value>&quot;Xerox 1907&quot;</value>
                  <value>&quot;Xerox 1908&quot;</value>
                  <value>&quot;Xerox 1909&quot;</value>
                  <value>&quot;Xerox 191&quot;</value>
                  <value>&quot;Xerox 1910&quot;</value>
                  <value>&quot;Xerox 1911&quot;</value>
                  <value>&quot;Xerox 1912&quot;</value>
                  <value>&quot;Xerox 1913&quot;</value>
                  <value>&quot;Xerox 1914&quot;</value>
                  <value>&quot;Xerox 1915&quot;</value>
                  <value>&quot;Xerox 1916&quot;</value>
                  <value>&quot;Xerox 1917&quot;</value>
                  <value>&quot;Xerox 1918&quot;</value>
                  <value>&quot;Xerox 1919&quot;</value>
                  <value>&quot;Xerox 192&quot;</value>
                  <value>&quot;Xerox 1920&quot;</value>
                  <value>&quot;Xerox 1921&quot;</value>
                  <value>&quot;Xerox 1922&quot;</value>
                  <value>&quot;Xerox 1923&quot;</value>
                  <value>&quot;Xerox 1924&quot;</value>
                  <value>&quot;Xerox 1925&quot;</value>
                  <value>&quot;Xerox 1926&quot;</value>
                  <value>&quot;Xerox 1927&quot;</value>
                  <value>&quot;Xerox 1928&quot;</value>
                  <value>&quot;Xerox 1929&quot;</value>
                  <value>&quot;Xerox 193&quot;</value>
                  <value>&quot;Xerox 1930&quot;</value>
                  <value>&quot;Xerox 1931&quot;</value>
                  <value>&quot;Xerox 1932&quot;</value>
                  <value>&quot;Xerox 1933&quot;</value>
                  <value>&quot;Xerox 1934&quot;</value>
                  <value>&quot;Xerox 1935&quot;</value>
                  <value>&quot;Xerox 1936&quot;</value>
                  <value>&quot;Xerox 1937&quot;</value>
                  <value>&quot;Xerox 1938&quot;</value>
                  <value>&quot;Xerox 1939&quot;</value>
                  <value>&quot;Xerox 194&quot;</value>
                  <value>&quot;Xerox 1940&quot;</value>
                  <value>&quot;Xerox 1941&quot;</value>
                  <value>&quot;Xerox 1942&quot;</value>
                  <value>&quot;Xerox 1943&quot;</value>
                  <value>&quot;Xerox 1944&quot;</value>
                  <value>&quot;Xerox 1945&quot;</value>
                  <value>&quot;Xerox 1946&quot;</value>
                  <value>&quot;Xerox 1947&quot;</value>
                  <value>&quot;Xerox 1948&quot;</value>
                  <value>&quot;Xerox 1949&quot;</value>
                  <value>&quot;Xerox 195&quot;</value>
                  <value>&quot;Xerox 1950&quot;</value>
                  <value>&quot;Xerox 1951&quot;</value>
                  <value>&quot;Xerox 1952&quot;</value>
                  <value>&quot;Xerox 1953&quot;</value>
                  <value>&quot;Xerox 1954&quot;</value>
                  <value>&quot;Xerox 1955&quot;</value>
                  <value>&quot;Xerox 1956&quot;</value>
                  <value>&quot;Xerox 1957&quot;</value>
                  <value>&quot;Xerox 1958&quot;</value>
                  <value>&quot;Xerox 1959&quot;</value>
                  <value>&quot;Xerox 196&quot;</value>
                  <value>&quot;Xerox 1960&quot;</value>
                  <value>&quot;Xerox 1962&quot;</value>
                  <value>&quot;Xerox 1963&quot;</value>
                  <value>&quot;Xerox 1964&quot;</value>
                  <value>&quot;Xerox 1965&quot;</value>
                  <value>&quot;Xerox 1966&quot;</value>
                  <value>&quot;Xerox 1967&quot;</value>
                  <value>&quot;Xerox 1968&quot;</value>
                  <value>&quot;Xerox 1969&quot;</value>
                  <value>&quot;Xerox 197&quot;</value>
                  <value>&quot;Xerox 1970&quot;</value>
                  <value>&quot;Xerox 1971&quot;</value>
                  <value>&quot;Xerox 1972&quot;</value>
                  <value>&quot;Xerox 1973&quot;</value>
                  <value>&quot;Xerox 1974&quot;</value>
                  <value>&quot;Xerox 1975&quot;</value>
                  <value>&quot;Xerox 1976&quot;</value>
                  <value>&quot;Xerox 1977&quot;</value>
                  <value>&quot;Xerox 1978&quot;</value>
                  <value>&quot;Xerox 1979&quot;</value>
                  <value>&quot;Xerox 198&quot;</value>
                  <value>&quot;Xerox 1980&quot;</value>
                  <value>&quot;Xerox 1981&quot;</value>
                  <value>&quot;Xerox 1982&quot;</value>
                  <value>&quot;Xerox 1983&quot;</value>
                  <value>&quot;Xerox 1984&quot;</value>
                  <value>&quot;Xerox 1985&quot;</value>
                  <value>&quot;Xerox 1986&quot;</value>
                  <value>&quot;Xerox 1987&quot;</value>
                  <value>&quot;Xerox 1988&quot;</value>
                  <value>&quot;Xerox 1989&quot;</value>
                  <value>&quot;Xerox 199&quot;</value>
                  <value>&quot;Xerox 1990&quot;</value>
                  <value>&quot;Xerox 1991&quot;</value>
                  <value>&quot;Xerox 1992&quot;</value>
                  <value>&quot;Xerox 1993&quot;</value>
                  <value>&quot;Xerox 1994&quot;</value>
                  <value>&quot;Xerox 1995&quot;</value>
                  <value>&quot;Xerox 1996&quot;</value>
                  <value>&quot;Xerox 1997&quot;</value>
                  <value>&quot;Xerox 1998&quot;</value>
                  <value>&quot;Xerox 1999&quot;</value>
                  <value>&quot;Xerox 2&quot;</value>
                  <value>&quot;Xerox 20&quot;</value>
                  <value>&quot;Xerox 200&quot;</value>
                  <value>&quot;Xerox 2000&quot;</value>
                  <value>&quot;Xerox 201&quot;</value>
                  <value>&quot;Xerox 202&quot;</value>
                  <value>&quot;Xerox 203&quot;</value>
                  <value>&quot;Xerox 204&quot;</value>
                  <value>&quot;Xerox 205&quot;</value>
                  <value>&quot;Xerox 206&quot;</value>
                  <value>&quot;Xerox 207&quot;</value>
                  <value>&quot;Xerox 208&quot;</value>
                  <value>&quot;Xerox 209&quot;</value>
                  <value>&quot;Xerox 21&quot;</value>
                  <value>&quot;Xerox 210&quot;</value>
                  <value>&quot;Xerox 211&quot;</value>
                  <value>&quot;Xerox 212&quot;</value>
                  <value>&quot;Xerox 213&quot;</value>
                  <value>&quot;Xerox 214&quot;</value>
                  <value>&quot;Xerox 215&quot;</value>
                  <value>&quot;Xerox 216&quot;</value>
                  <value>&quot;Xerox 217&quot;</value>
                  <value>&quot;Xerox 218&quot;</value>
                  <value>&quot;Xerox 219&quot;</value>
                  <value>&quot;Xerox 22&quot;</value>
                  <value>&quot;Xerox 220&quot;</value>
                  <value>&quot;Xerox 221&quot;</value>
                  <value>&quot;Xerox 222&quot;</value>
                  <value>&quot;Xerox 223&quot;</value>
                  <value>&quot;Xerox 224&quot;</value>
                  <value>&quot;Xerox 225&quot;</value>
                  <value>&quot;Xerox 226&quot;</value>
                  <value>&quot;Xerox 227&quot;</value>
                  <value>&quot;Xerox 228&quot;</value>
                  <value>&quot;Xerox 229&quot;</value>
                  <value>&quot;Xerox 23&quot;</value>
                  <value>&quot;Xerox 230&quot;</value>
                  <value>&quot;Xerox 231&quot;</value>
                  <value>&quot;Xerox 232&quot;</value>
                  <value>&quot;Xerox 4200 Series MultiUse Premium Copy Paper (20Lb. and 84 Bright)&quot;</value>
                  <value>&quot;Xerox Blank Computer Paper&quot;</value>
                  <value>&quot;Xerox Color Copier Paper, 11\&quot; x 17\&quot;, Ream&quot;</value>
                  <value>&quot;Xerox WorkCentre 6505DN Laser Multifunction Printer&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[avg:Discount:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[avg:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1n591da1jfszub11jpy521dzq3dk].[avg:Discount:qk]</rows>
        <cols>[federated.1n591da1jfszub11jpy521dzq3dk].[Product Name (group)]</cols>
      </table>
      <simple-id uuid='{49B179E7-5DF4-4346-8640-D026715227EB}' />
    </worksheet>
    <worksheet name='Q15'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#59a14f' />
            <format attr='fill-above' id='refline0' value='#a7eda7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <reference-line axis-column='[federated.1n591da1jfszub11jpy521dzq3dk].[avg:Sales:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.1n591da1jfszub11jpy521dzq3dk].[avg:Sales:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.1n591da1jfszub11jpy521dzq3dk].[avg:Sales:qk]</rows>
        <cols>([federated.1n591da1jfszub11jpy521dzq3dk].[yr:Order Date:ok] / [federated.1n591da1jfszub11jpy521dzq3dk].[mn:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{378414CA-16E5-4AB6-AB81-5BFA22BFEA5C}' />
    </worksheet>
    <worksheet name='Q16'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Order ID:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]</rows>
        <cols>[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='110'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#59a14f'>Higgest Profit</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Order ID:nk]</field>
                      <field>[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]</field>
                      <field>[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;US-2021-118689&quot;</value>
                    <value>8762.3890999999985</value>
                    <value>18336.739999999998</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-193' y='1' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='110'>
            <formatted-text>
              <run bold='true' fontcolor='#59a14f'>Top Sales</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Order ID:nk]</field>
                      <field>[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]</field>
                      <field>[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;US-2019-145317&quot;</value>
                    <value>-1789.7327000000023</value>
                    <value>23661.227999999999</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-43' y='59' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='120'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#eb3b0f'>Lowest Profit</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Order ID:nk]</field>
                      <field>[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]</field>
                      <field>[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;US-2021-108196&quot;</value>
                    <value>-6892.3748000000014</value>
                    <value>5016.5490000000009</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='101' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{BE4A9C2D-546B-40B3-AD85-10C04D85469B}' />
    </worksheet>
    <worksheet name='Q17'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='Zero Axis' datatype='integer' name='[Calculation_268527161120133122]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0' />
            </column>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_268527161120133122]' derivation='Sum' name='[sum:Calculation_268527161120133122:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Ship Mode:nk]' direction='DESC' />
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_268527161120133122:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[ctd:Order ID:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_268527161120133122:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Ship Mode:nk]' />
              <wedge-size column='[federated.1n591da1jfszub11jpy521dzq3dk].[ctd:Order ID:qk]' />
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Ship Mode:nk]' />
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[ctd:Order ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.1546962261199951' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_268527161120133122:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[ctd:Order ID:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#4e79a7' fontsize='14'><![CDATA[<[federated.1n591da1jfszub11jpy521dzq3dk].[ctd:Order ID:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontsize='10'>Total Orders</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-color' value='#ffffff' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_268527161120133122:qk] + [federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_268527161120133122:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{75A42576-D381-4FCD-94AA-4B9E052B048C}' />
    </worksheet>
    <worksheet name='Q2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='Customer Rank' datatype='integer' name='[Calculation_142707839788208133]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([Sales]), &apos;desc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Ranks' datatype='string' name='[Calculation_142707839794692105]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_142707839788208133] = 25 OR [Calculation_142707839788208133] = 50 OR [Calculation_142707839788208133] = 100 THEN&#13;&#10;    ATTR([Customer Name]) + &quot; - &quot; + STR(SUM([Sales]))&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_142707839788208133]' derivation='User' name='[usr:Calculation_142707839788208133:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_142707839794692105]' derivation='User' name='[usr:Calculation_142707839794692105:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.1n591da1jfszub11jpy521dzq3dk].[Calculation_142707839788208133]' ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_142707839788208133:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Customer Name:nk]' direction='DESC' using='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' />
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_142707839794692105:nk:1]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[usr:Calculation_142707839794692105:nk:1]' />
              <groupfilter function='member' level='[usr:Calculation_142707839794692105:nk:1]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Order Date:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_142707839794692105:nk:1]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[:Measure Names]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1n591da1jfszub11jpy521dzq3dk].[:Measure Names]' value='178' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Customer Name:nk]</rows>
        <cols>[federated.1n591da1jfszub11jpy521dzq3dk].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{301EC8FD-7EF2-4B53-A985-7846ECF75740}' />
    </worksheet>
    <worksheet name='Q3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='index' datatype='integer' name='[Calculation_486951743751315456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc level-address='[federated.1n591da1jfszub11jpy521dzq3dk].[Product Name]' ordering-type='Field'>
                  <order field='[federated.1n591da1jfszub11jpy521dzq3dk].[Product Name]' />
                  <order field='[federated.1n591da1jfszub11jpy521dzq3dk].[Segment]' />
                  <sort direction='DESC' using='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Quantity:qk]' />
                </table-calc>
              </calculation>
            </column>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_486951743751315456]' derivation='User' name='[usr:Calculation_486951743751315456:ok:5]' pivot='key' type='ordinal'>
              <table-calc level-address='[federated.1n591da1jfszub11jpy521dzq3dk].[Product Name]' ordering-type='Field'>
                <order field='[federated.1n591da1jfszub11jpy521dzq3dk].[Product Name]' />
                <order field='[federated.1n591da1jfszub11jpy521dzq3dk].[Segment]' />
                <sort direction='DESC' using='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Quantity:qk]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_486951743751315456]' derivation='User' name='[usr:Calculation_486951743751315456:qk:7]' pivot='key' type='quantitative'>
              <table-calc level-address='[federated.1n591da1jfszub11jpy521dzq3dk].[Product Name]' ordering-type='Field'>
                <order field='[federated.1n591da1jfszub11jpy521dzq3dk].[Product Name]' />
                <order field='[federated.1n591da1jfszub11jpy521dzq3dk].[Segment]' />
                <sort direction='DESC' using='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Quantity:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true'>
            <groupfilter function='except' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_486951743751315456:qk:7]' included-values='in-range'>
            <min>1</min>
            <max>3</max>
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_486951743751315456:qk:7]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Quantity:qk]' value='10' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Segment:nk]' value='126' />
            <format attr='width' field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Product Name:nk]' value='92' />
            <format attr='text-align' field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Product Name:nk]' value='center' />
            <format attr='height' field='[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_486951743751315456:ok:5]' value='35' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Product Name:nk]' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Product Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#a0cbe8' />
                <format attr='size' value='1.6151933670043945' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_486951743751315456:ok:5]</rows>
        <cols>([federated.1n591da1jfszub11jpy521dzq3dk].[none:Segment:nk] * [federated.1n591da1jfszub11jpy521dzq3dk].[sum:Quantity:qk])</cols>
      </table>
      <simple-id uuid='{CB739A8D-5AC7-4EB9-BC4E-F531DF145CFA}' />
    </worksheet>
    <worksheet name='Q4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Reference Date' datatype='date' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='#2023-12-17#'>
              <calculation class='tableau' formula='#2023-12-17#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='YTD sales' datatype='real' name='[Calculation_142707839799164939]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_142707840517505041]&lt;=TODAY()&#13;&#10;AND&#13;&#10;DATEDIFF(&quot;year&quot;,[Calculation_142707840517505041],TODAY())=0&#13;&#10;THEN [Sales]&#13;&#10;END' />
            </column>
            <column caption='QTD Sales' datatype='real' name='[Calculation_142707839799435276]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_142707840517505041]&lt;=TODAY()&#13;&#10;AND&#13;&#10;DATEDIFF(&quot;quarter&quot;,[Calculation_142707840517505041],TODAY())=0&#13;&#10;THEN [Sales]&#13;&#10;END' />
            </column>
            <column caption='MTD sales' datatype='real' name='[Calculation_142707839799595021]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_142707840517505041]&lt;=TODAY()&#13;&#10;AND&#13;&#10;DATEDIFF(&quot;month&quot;,[Calculation_142707840517505041],TODAY())=0&#13;&#10;THEN [Sales]&#13;&#10;END' />
            </column>
            <column caption=' newdate 2023' datatype='datetime' name='[Calculation_142707840517505041]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;year&apos;, 1, [Order Date])' />
            </column>
            <column caption='Year' datatype='integer' name='[Calculation_1592022501930512385]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='YEAR([Parameters].[Parameter 4])' />
            </column>
            <column caption='Quarter' datatype='integer' name='[Calculation_1592022501930696706]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='QUARTER([Parameters].[Parameter 4])' />
            </column>
            <column caption='Month' datatype='string' name='[Calculation_1592022501930942467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;month&apos;,[Parameters].[Parameter 4])' />
            </column>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1592022501930512385]' derivation='None' name='[none:Calculation_1592022501930512385:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1592022501930696706]' derivation='None' name='[none:Calculation_1592022501930696706:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1592022501930942467]' derivation='None' name='[none:Calculation_1592022501930942467:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_142707839799164939]' derivation='Sum' name='[sum:Calculation_142707839799164939:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_142707839799435276]' derivation='Sum' name='[sum:Calculation_142707839799435276:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_142707839799595021]' derivation='Sum' name='[sum:Calculation_142707839799595021:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_142707839799595021:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_142707839799435276:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_142707839799164939:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1n591da1jfszub11jpy521dzq3dk].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_142707839799595021:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='text-align' data-class='total' field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Calculation_1592022501930512385:ok]' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1n591da1jfszub11jpy521dzq3dk].[none:Calculation_1592022501930512385:ok] / ([federated.1n591da1jfszub11jpy521dzq3dk].[none:Calculation_1592022501930696706:ok] / [federated.1n591da1jfszub11jpy521dzq3dk].[none:Calculation_1592022501930942467:nk]))</rows>
        <cols>[federated.1n591da1jfszub11jpy521dzq3dk].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.1n591da1jfszub11jpy521dzq3dk].[qr:Calculation_142707840517505041:ok]</column>
        </subtotals>
      </table>
      <simple-id uuid='{1CB1B56A-97BE-4959-A3BB-37D0008A019F}' />
    </worksheet>
    <worksheet name='Q5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#59a14f' />
            <format attr='color' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]' value='#000000' />
            <format attr='vertical-align' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]' value='center' />
            <format attr='text-align' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]' value='right' />
            <format attr='text-orientation' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]' value='0' />
            <format attr='text-orientation' data-class='subtotal' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]' value='0' />
            <format attr='text-align' data-class='subtotal' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]' value='right' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='center' />
            <format attr='width' field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' value='121' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='subtotal' scope='cols' value='auto' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='cols' value='auto' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]' num-steps='2' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#c8dcc8</color>
                <color>#b7dfb7</color>
                <color>#a5e3a5</color>
                <color>#92e692</color>
                <color>#7fea7f</color>
                <color>#6ced6c</color>
                <color>#57f157</color>
                <color>#42f442</color>
                <color>#2df82d</color>
                <color>#16fb16</color>
                <color>#00ff00</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Sub-Category:nk]</rows>
        <cols>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{AD92044F-C471-4B80-BF7A-D555DA3EE2DB}' />
    </worksheet>
    <worksheet name='Q6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='First order' datatype='date' name='[Calculation_142707839802765326]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Customer Name] : MIN([Order Date]) }' />
            </column>
            <column caption='Last Order ' datatype='date' name='[Calculation_142707839803060239]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Customer Name] : MAX([Order Date]) }' />
            </column>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_142707839802765326]' derivation='Year-Trunc' name='[tyr:Calculation_142707839802765326:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_142707839803060239]' derivation='Year-Trunc' name='[tyr:Calculation_142707839803060239:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1n591da1jfszub11jpy521dzq3dk].[tyr:Calculation_142707839802765326:qk]' scope='cols' value='true' />
            <format attr='display' class='0' field='[federated.1n591da1jfszub11jpy521dzq3dk].[tyr:Calculation_142707839803060239:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='346' />
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[tyr:Calculation_142707839803060239:qk]' value='*dd-mm-yyyy' />
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[tyr:Calculation_142707839802765326:qk]' value='*' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Customer Name:nk]' value='156' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[tyr:Calculation_142707839802765326:qk]' value='*dd-mm-yyyy' />
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[tyr:Calculation_142707839803060239:qk]' value='*dd-mm-yyyy' />
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1n591da1jfszub11jpy521dzq3dk].[tyr:Calculation_142707839802765326:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='13' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1n591da1jfszub11jpy521dzq3dk].[tyr:Calculation_142707839803060239:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Customer Name:nk]</rows>
        <cols>([federated.1n591da1jfszub11jpy521dzq3dk].[tyr:Calculation_142707839802765326:qk] + [federated.1n591da1jfszub11jpy521dzq3dk].[tyr:Calculation_142707839803060239:qk])</cols>
      </table>
      <simple-id uuid='{19052FFC-DC8C-4D99-BBF2-3DFE2FF5AC91}' />
    </worksheet>
    <worksheet name='Q7'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top 50' datatype='integer' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='50'>
              <calculation class='tableau' formula='50' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Top 50 customers]' derivation='InOut' name='[io:Top 50 customers:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='Others' />
                <alias key='true' value='Top 50' />
              </aliases>
            </column-instance>
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[io:Top 50 customers:nk]' value='*True/False' />
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:sum:Sales:qk]' value='p0%' />
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1n591da1jfszub11jpy521dzq3dk].[io:Top 50 customers:nk]' />
              <wedge-size column='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' />
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[io:Top 50 customers:nk]' />
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:sum:Sales:qk]' />
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[<[federated.1n591da1jfszub11jpy521dzq3dk].[io:Top 50 customers:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#eb3b0f'><![CDATA[<[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:sum:Sales:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1n591da1jfszub11jpy521dzq3dk].[io:Top 50 customers:nk]</field>
                  <field>[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>false</value>
                <value>0.77721732797882725</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{7DA745D5-B8A1-47E7-9A42-0C2B78569968}' />
    </worksheet>
    <worksheet name='Q8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='ColumnInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:sum:Sales:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:sum:Profit:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1n591da1jfszub11jpy521dzq3dk].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:sum:Sales:qk:5]&quot;</bucket>
              <bucket>&quot;[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:sum:Profit:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Sub-Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Chairs&quot;</bucket>
              <bucket>&quot;Phones&quot;</bucket>
              <bucket>&quot;Binders&quot;</bucket>
              <bucket>&quot;Storage&quot;</bucket>
              <bucket>&quot;Tables&quot;</bucket>
              <bucket>&quot;Copiers&quot;</bucket>
              <bucket>&quot;Accessories&quot;</bucket>
              <bucket>&quot;Machines&quot;</bucket>
              <bucket>&quot;Bookcases&quot;</bucket>
              <bucket>&quot;Appliances&quot;</bucket>
              <bucket>&quot;Paper&quot;</bucket>
              <bucket>&quot;Furnishings&quot;</bucket>
              <bucket>&quot;Supplies&quot;</bucket>
              <bucket>&quot;Art&quot;</bucket>
              <bucket>&quot;Envelopes&quot;</bucket>
              <bucket>&quot;Labels&quot;</bucket>
              <bucket>&quot;Fasteners&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[:Measure Names]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#333333' />
            <format attr='border-style' value='solid' />
            <format attr='text-align' field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Sub-Category:nk]' value='center' />
            <format attr='color' field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Sub-Category:nk]' value='#333333' />
            <format attr='color' data-class='subtotal' value='#00aaff' />
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:sum:Profit:qk:2]' value='p0%' />
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:sum:Sales:qk:5]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' value='#333333' />
            <format attr='border-style' value='solid' />
            <format attr='color' data-class='subtotal' field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Sub-Category:nk]' value='#00aaff' />
            <format attr='background-color' field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Sub-Category:nk]' value='#ffffff' />
            <format attr='color' data-class='subtotal' field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' value='#00aaff' />
            <format attr='background-color' field='[federated.1n591da1jfszub11jpy521dzq3dk].[:Measure Names]' value='#ffaa00' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='background-color' value='#00aaff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' value='#ffffff' />
            <format attr='color' field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Sub-Category:nk]' value='#333333' />
            <format attr='color' field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' value='#333333' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='color' field='[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:sum:Sales:qk:5]' value='#333333' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk] / [federated.1n591da1jfszub11jpy521dzq3dk].[none:Sub-Category:nk])</rows>
        <cols>([federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk] / [federated.1n591da1jfszub11jpy521dzq3dk].[:Measure Names])</cols>
        <subtotals>
          <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
        </subtotals>
        <percentages enabled='true' mode='column-in-pane' />
      </table>
      <simple-id uuid='{D96B9711-579D-4F76-95ED-077F817169DC}' />
    </worksheet>
    <worksheet name='Q9'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='View by' datatype='string' name='[Sub-Category Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Region&quot;'>
              <calculation class='tableau' formula='&quot;Region&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='Case ' datatype='string' name='[Calculation_142707840530206739]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Sub-Category Parameter (copy)]&#13;&#10;   WHEN &apos;Region&apos; THEN [Region]&#13;&#10;   WHEN &apos;Category&apos; THEN [Category]&#13;&#10;   WHEN &apos;Sub-Category&apos; THEN [Sub-Category]&#13;&#10;END' />
            </column>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_142707840530206739]' derivation='None' name='[none:Calculation_142707840530206739:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[Parameters].[Sub-Category Parameter (copy)]' value='80' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60370165109634399' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Parameters].[Sub-Category Parameter (copy)] * [federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk])</rows>
        <cols>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Calculation_142707840530206739:nk]</cols>
      </table>
      <simple-id uuid='{0424CB00-17CA-46A2-83AD-C2F3D83E2EC2}' />
    </worksheet>
    <worksheet name='Segement wise sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='Zero Axis' datatype='integer' name='[Calculation_268527161120133122]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0' />
            </column>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='Count' name='[cnt:Segment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_268527161120133122]' derivation='Sum' name='[sum:Calculation_268527161120133122:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_268527161120133122:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_268527161120133122:qk]' scope='rows' value='false' />
            <format attr='display' class='1' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_268527161120133122:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:sum:Sales:qk]' value='p0%' />
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[cnt:Segment:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' value='n&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#a7eda7' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00b900' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_268527161120133122:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Segment:nk]' />
              <wedge-size column='[federated.1n591da1jfszub11jpy521dzq3dk].[cnt:Segment:qk]' />
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Segment:nk]' />
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:sum:Sales:qk]' />
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#4e79a7'><![CDATA[<[federated.1n591da1jfszub11jpy521dzq3dk].[none:Segment:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#eb3b0f'><![CDATA[<[federated.1n591da1jfszub11jpy521dzq3dk].[pcto:sum:Sales:qk]>]]></run>
                <run><![CDATA[
<[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_268527161120133122:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='10'>Total Sales</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='10'><![CDATA[<[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_268527161120133122:qk] + [federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_268527161120133122:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{BF9A113A-5858-4EE5-BAC1-33EAFC7DB000}' />
    </worksheet>
    <worksheet name='Sheet 27'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption=' newdate 2023' datatype='datetime' name='[Calculation_142707840517505041]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;year&apos;, 1, [Order Date])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_142707840517505041]' derivation='Year' name='[yr:Calculation_142707840517505041:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_142707840517505041:ok]</cols>
      </table>
      <simple-id uuid='{EA0EB0FD-46F5-4721-9C07-A05B1BE1E2D7}' />
    </worksheet>
    <worksheet name='Top 5 products'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Product Name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Product Name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Product Name:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' value='n&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Product Name:nk]' value='64' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00b900' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Product Name:nk]</rows>
        <cols>[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{89828E38-B97D-4364-83BB-24F739184CF3}' />
    </worksheet>
    <worksheet name='Total Avg'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='CountD' name='[ctd:Customer Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='239' />
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[avg:Discount:qk]' value='p0.00%' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[ctd:Customer Name:qk]' />
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[avg:Discount:qk]' />
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[ctd:Order ID:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#0000ff' fontsize='16'><![CDATA[<[federated.1n591da1jfszub11jpy521dzq3dk].[ctd:Customer Name:qk]>]]></run>
                <run>&#10;Total Customers&#10;&#10;&#10;&#10;</run>
                <run bold='true' fontcolor='#0000ff' fontsize='16'><![CDATA[<[federated.1n591da1jfszub11jpy521dzq3dk].[avg:Discount:qk]>]]></run>
                <run>&#10;Average Discount&#10;&#10;&#10;&#10;</run>
                <run bold='true' fontcolor='#0000ff' fontsize='16'><![CDATA[<[federated.1n591da1jfszub11jpy521dzq3dk].[ctd:Order ID:qk]>]]></run>
                <run>&#10;Total Orders&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AFC502CE-5693-4D18-B755-AD27E46AD917}' />
    </worksheet>
    <worksheet name='Total orders'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#a7eda7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[ctd:Order ID:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#0000ff' fontsize='16'><![CDATA[<[federated.1n591da1jfszub11jpy521dzq3dk].[ctd:Order ID:qk]>]]></run>
                <run>&#10;Total Order&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1B3BA104-B414-4979-BA79-1EA192CD7DF8}' />
    </worksheet>
    <worksheet name='Year wise sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='Current Year sales ' datatype='real' name='[Calculation_268527161133690883]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date])={MAX(YEAR([Order Date]))}&#13;&#10;THEN [Sales]&#13;&#10;END' />
            </column>
            <column caption='Previous Year sales' datatype='real' name='[Calculation_268527161134268420]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date]) = {MAX(YEAR([Order Date]))}-1&#13;&#10;THEN [Sales]&#13;&#10;END' />
            </column>
            <column caption='YoY growth' datatype='real' name='[Calculation_268527161136869381]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Calculation_268527161133690883])- SUM([Calculation_268527161134268420])) / SUM([Calculation_268527161134268420])' />
            </column>
            <column caption='Growth icon' datatype='string' name='[Calculation_268527161139097606]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_268527161136869381] &gt; 0 THEN &quot;▲&quot;&#13;&#10;END' />
            </column>
            <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_268527161133690883]' derivation='Sum' name='[sum:Calculation_268527161133690883:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527161134268420]' derivation='Sum' name='[sum:Calculation_268527161134268420:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527161136869381]' derivation='User' name='[usr:Calculation_268527161136869381:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527161139097606]' derivation='User' name='[usr:Calculation_268527161139097606:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[yr:Calculation_268527161149886471:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_268527161136869381:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_268527161133690883:qk]' value='n&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' />
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_268527161134268420:qk]' value='n&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' />
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[ctd:Order ID:qk]' value='n&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' />
            <format attr='width' value='119' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#a7eda7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_268527161133690883:qk]' />
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_268527161134268420:qk]' />
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[ctd:Order ID:qk]' />
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_268527161136869381:qk]' />
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_268527161139097606:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontalignment='0' fontcolor='#0000ff' fontsize='16'><![CDATA[<[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_268527161133690883:qk]>]]></run>
                <run fontalignment='0'>&#10;Current Year Sales&#10;&#10;&#10;&#10;</run>
                <run bold='true' fontalignment='0' fontcolor='#0000ff' fontsize='16'><![CDATA[<[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Calculation_268527161134268420:qk]>]]></run>
                <run fontalignment='0'>&#10;Previous Year Sales&#10;&#10;&#10;&#10;</run>
                <run bold='true' fontalignment='0' fontcolor='#0000ff' fontsize='16'><![CDATA[<[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_268527161136869381:qk]>]]></run>
                <run bold='true' fontalignment='0' fontcolor='#00ff00' fontsize='16'><![CDATA[ <[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_268527161139097606:nk]>]]></run>
                <run fontalignment='0'>Æ&#10;</run>
                <run bold='true' fontalignment='0'>YoY Growth %</run>
                <run fontalignment='0'>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6DA5257C-F7F7-4C9E-B28B-84E8C21525D7}' />
    </worksheet>
    <worksheet name='YoY growth'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
          </datasources>
          <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
            <column caption='Current Year sales ' datatype='real' name='[Calculation_268527161133690883]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date])={MAX(YEAR([Order Date]))}&#13;&#10;THEN [Sales]&#13;&#10;END' />
            </column>
            <column caption='Previous Year sales' datatype='real' name='[Calculation_268527161134268420]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date]) = {MAX(YEAR([Order Date]))}-1&#13;&#10;THEN [Sales]&#13;&#10;END' />
            </column>
            <column caption='YoY growth' datatype='real' name='[Calculation_268527161136869381]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Calculation_268527161133690883])- SUM([Calculation_268527161134268420])) / SUM([Calculation_268527161134268420])' />
            </column>
            <column caption='Growth icon' datatype='string' name='[Calculation_268527161139097606]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_268527161136869381] &gt; 0 THEN &quot;▲&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_268527161136869381]' derivation='User' name='[usr:Calculation_268527161136869381:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_268527161139097606]' derivation='User' name='[usr:Calculation_268527161139097606:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' context='true' filter-group='6'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</column>
            <column>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='158' />
            <format attr='height' value='82' />
            <format attr='text-format' field='[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_268527161136869381:qk]' value='p0.00%' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_268527161136869381:qk]' />
              <text column='[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_268527161139097606:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#0000ff' fontsize='16'><![CDATA[<[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_268527161136869381:qk]>  ]]></run>
                <run fontcolor='#00b900' fontsize='16'><![CDATA[<[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_268527161139097606:nk]>]]></run>
                <run>&#10;YoY Growth %</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{644E625C-7FD7-4212-90A3-E4D641E3C207}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#a7eda7' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
      </datasources>
      <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
        <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
        </column>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='41139' id='3' name='Category wise sales' w='27375' x='13472' y='15032' />
        <zone h='41297' id='4' name='Segement wise sales' w='28756' x='42142' y='15032' />
        <zone h='41139' id='5' name='Top 5 products' w='27461' x='72107' y='15032' />
        <zone h='41456' id='6' name='Monthly Trend' w='86269' x='13299' y='57911' />
        <zone h='48418' id='7' name='Year wise sales' show-title='false' w='10622' x='691' y='28639' />
        <zone forceUpdate='true' h='6487' id='8' type-v2='text' w='12867' x='173' y='13766'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='20'>Superstore</run>
          </formatted-text>
        </zone>
        <zone h='12500' id='9' is-centered='0' is-scaled='1' param='C:/Users/ratan/OneDrive/Pictures/Store logo.png' type-v2='bitmap' w='11658' x='1900' y='1899' />
        <zone h='6646' id='10' type-v2='dashboard-object' w='12781' x='14076' y='2215'>
          <button action='tabdoc:goto-sheet window-id=&quot;{F29FC945-9D6D-4149-9230-FBE8580F241E}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Sales Analytics</caption>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#333333' />
            </button-visual-state>
          </button>
        </zone>
        <zone h='6646' id='11' type-v2='dashboard-object' w='12867' x='27461' y='2215'>
          <button action='tabdoc:goto-sheet window-id=&quot;{1FA86A6A-F22D-4BF2-BBEA-1A4BA9B33C41}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Details report</caption>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#a7acad' />
            </button-visual-state>
          </button>
        </zone>
        <zone h='8228' id='15' name='Total orders' show-title='false' w='7340' x='0' y='70095' />
        <zone h='11867' hidden-by-user='true' id='19' param='vert' type-v2='layout-flow' w='46287' x='47323' y='633'>
          <zone fixed-size='24' h='3955' hidden-by-user='true' id='16' is-fixed='true' mode='checkdropdown' name='Monthly Trend' param='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' type-v2='filter' values='database' w='46287' x='47323' y='633'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='3956' hidden-by-user='true' id='17' mode='checkdropdown' name='Monthly Trend' param='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' type-v2='filter' values='cascading' w='46287' x='47323' y='4588'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='3956' hidden-by-user='true' id='18' mode='checkdropdown' name='Monthly Trend' param='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' type-v2='filter' values='database' w='46287' x='47323' y='8544'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='6487' id='20' type-v2='dashboard-object' w='4922' x='41710' y='2215'>
          <button action='' active-visual-state-index='1'>
            <toggle-action>tabdoc:toggle-button-click-action window-id=&quot;{F29FC945-9D6D-4149-9230-FBE8580F241E}&quot; zone-id=&quot;20&quot; zone-ids=[19]</toggle-action>
            <button-visual-state>
              <image-path>C:/Users/ratan/OneDrive/Pictures/Hide filter icon.png</image-path>
            </button-visual-state>
            <button-visual-state>
              <image-path>C:/Users/ratan/OneDrive/Pictures/Filter logo.png</image-path>
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2000' minheight='2000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='164' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='163' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='100' h='12500' id='9' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/ratan/OneDrive/Pictures/Store logo.png' type-v2='bitmap' w='11658' x='1900' y='1899'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6646' id='10' type-v2='dashboard-object' w='12781' x='14076' y='2215'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{F29FC945-9D6D-4149-9230-FBE8580F241E}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Sales Analytics</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#333333' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6646' id='11' type-v2='dashboard-object' w='12867' x='27461' y='2215'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{1FA86A6A-F22D-4BF2-BBEA-1A4BA9B33C41}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Details report</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#a7acad' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6487' id='8' type-v2='text' w='12867' x='173' y='13766'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='20'>Superstore</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41139' id='3' is-fixed='true' name='Category wise sales' w='27375' x='13472' y='15032'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41297' id='4' is-fixed='true' name='Segement wise sales' w='28756' x='42142' y='15032'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41139' id='5' is-fixed='true' name='Top 5 products' w='27461' x='72107' y='15032'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48418' id='7' is-fixed='true' name='Year wise sales' show-title='false' w='10622' x='691' y='28639'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='24' h='3955' hidden-by-user='true' id='16' mode='checkdropdown' name='Monthly Trend' param='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' type-v2='filter' values='database' w='46287' x='47323' y='633'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3956' hidden-by-user='true' id='17' mode='checkdropdown' name='Monthly Trend' param='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' type-v2='filter' values='cascading' w='46287' x='47323' y='4588'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3956' hidden-by-user='true' id='18' mode='checkdropdown' name='Monthly Trend' param='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' type-v2='filter' values='database' w='46287' x='47323' y='8544'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41456' id='6' is-fixed='true' name='Monthly Trend' w='86269' x='13299' y='57911'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='66' h='8228' id='15' is-fixed='true' name='Total orders' show-title='false' w='7340' x='0' y='70095'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D470CC26-4E5D-466D-879B-241F52AE9AD2}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ddebf0' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Sample - Superstore' name='federated.1n591da1jfszub11jpy521dzq3dk' />
      </datasources>
      <datasource-dependencies datasource='federated.1n591da1jfszub11jpy521dzq3dk'>
        <column caption='New year date' datatype='datetime' name='[Calculation_268527161149886471]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='DATEADD(&quot;year&quot;,1,[Order Date])' />
        </column>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_268527161149886471]' derivation='Year' name='[yr:Calculation_268527161149886471:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='12000' id='15' is-centered='0' is-scaled='1' param='C:/Users/ratan/OneDrive/Pictures/Store logo.png' type-v2='bitmap' w='11400' x='500' y='1000' />
        <zone h='4625' id='16' type-v2='text' w='14800' x='-200' y='11625'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='20'>Superstore</run>
          </formatted-text>
        </zone>
        <zone h='88924' id='17' name='Details' show-title='false' w='88169' x='12522' y='11076' />
        <zone h='13291' id='18' name='YoY growth' show-title='false' w='13817' x='-518' y='68196' />
        <zone h='39082' id='19' name='Total Avg' show-title='false' w='10708' x='691' y='26899' />
        <zone h='4500' id='23' type-v2='dashboard-object' w='13400' x='12100' y='2500'>
          <button action='tabdoc:goto-sheet window-id=&quot;{F29FC945-9D6D-4149-9230-FBE8580F241E}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Sales Analycits</caption>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#a7acad' />
            </button-visual-state>
          </button>
        </zone>
        <zone h='4500' id='24' type-v2='dashboard-object' w='12800' x='25800' y='2500'>
          <button action='tabdoc:goto-sheet window-id=&quot;{1FA86A6A-F22D-4BF2-BBEA-1A4BA9B33C41}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Detail Report</caption>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#333333' />
            </button-visual-state>
          </button>
        </zone>
        <zone h='9125' hidden-by-user='true' id='25' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='56400' x='43200' y='1125'>
          <zone h='3125' hidden-by-user='true' id='22' mode='checkdropdown' name='Details' param='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' type-v2='filter' values='database' w='56400' x='43200' y='1125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='3000' hidden-by-user='true' id='21' mode='checkdropdown' name='Details' param='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' type-v2='filter' values='cascading' w='56400' x='43200' y='4250'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='3000' hidden-by-user='true' id='20' mode='checkdropdown' name='Details' param='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' type-v2='filter' values='database' w='56400' x='43200' y='7250'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='4500' id='26' type-v2='dashboard-object' w='4800' x='39300' y='2500'>
          <button action='' active-visual-state-index='1'>
            <toggle-action>tabdoc:toggle-button-click-action window-id=&quot;{1FA86A6A-F22D-4BF2-BBEA-1A4BA9B33C41}&quot; zone-id=&quot;26&quot; zone-ids=[25]</toggle-action>
            <button-visual-state>
              <image-path>C:/Users/ratan/OneDrive/Pictures/Hide filter icon.png</image-path>
            </button-visual-state>
            <button-visual-state>
              <image-path>C:/Users/ratan/OneDrive/Pictures/Filter logo.png</image-path>
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='158' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='157' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='96' h='12000' id='15' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/ratan/OneDrive/Pictures/Store logo.png' type-v2='bitmap' w='11400' x='500' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4500' id='23' type-v2='dashboard-object' w='13400' x='12100' y='2500'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{F29FC945-9D6D-4149-9230-FBE8580F241E}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Sales Analycits</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#a7acad' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4500' id='24' type-v2='dashboard-object' w='12800' x='25800' y='2500'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{1FA86A6A-F22D-4BF2-BBEA-1A4BA9B33C41}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Detail Report</caption>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#333333' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3125' hidden-by-user='true' id='22' mode='checkdropdown' name='Details' param='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]' type-v2='filter' values='database' w='56400' x='43200' y='1125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3000' hidden-by-user='true' id='21' mode='checkdropdown' name='Details' param='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]' type-v2='filter' values='cascading' w='56400' x='43200' y='4250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3000' hidden-by-user='true' id='20' mode='checkdropdown' name='Details' param='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]' type-v2='filter' values='database' w='56400' x='43200' y='7250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='88924' id='17' is-fixed='true' name='Details' show-title='false' w='88169' x='12522' y='11076'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4625' id='16' type-v2='text' w='14800' x='-200' y='11625'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='20'>Superstore</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39082' id='19' is-fixed='true' name='Total Avg' show-title='false' w='10708' x='691' y='26899'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='106' h='13291' id='18' is-fixed='true' name='YoY growth' show-title='false' w='13817' x='-518' y='68196'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C7DCF105-2525-4D38-A5AB-2A300718CC90}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Q1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Order Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Sub-Category:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1327EE0C-7774-491F-BC03-F7EAAF0F74E5}' />
    </window>
    <window class='worksheet' name='Q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Order Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Customer Name:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_142707839788359686:nk:1]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_142707839789289479:nk:1]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_142707839789445128:nk:1]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_142707839794692105:nk:1]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_142707839794692105:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0EB457FA-58AE-47E5-8A7E-24ACC2042087}' />
    </window>
    <window class='worksheet' name='Q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Product Name:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Segment:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_486951743751315456:ok:1]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_486951743751315456:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5CBFFC50-FDE5-45BE-AB14-73BC000A0970}' />
    </window>
    <window class='worksheet' name='Q4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='datetime' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[mn:Calculation_142707840517505041:ok]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Calculation_1592022501930942467:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[qr:Calculation_142707840517505041:ok]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_142707840516386832:ok]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_142707840517505041:ok]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F7D43853-8197-4339-A552-CA19C296ACDB}' />
    </window>
    <window class='worksheet' name='Q5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1n591da1jfszub11jpy521dzq3dk].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{6476DC78-0225-44A4-80AC-BCC9C38106BE}' />
    </window>
    <window class='worksheet' name='Q6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[md:Order Date:ok]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Customer Name:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[tdy:Calculation_142707839802765326:qk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[tdy:Calculation_142707839803060239:qk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[tyr:Calculation_142707839802765326:qk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[tyr:Calculation_142707839803060239:qk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_142707839802765326:ok]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_142707839803060239:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CC880DD8-6BF3-474C-B513-E119F56FFF89}' />
    </window>
    <window class='worksheet' name='Q7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1n591da1jfszub11jpy521dzq3dk].[io:Top 50 customers:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[io:Top 50 customers:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{05CA292D-35B5-497A-8223-6D944780D585}' />
    </window>
    <window class='worksheet' name='Q8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{3BAEBEFF-54B9-4ADA-B3D9-189D23A03EA6}' />
    </window>
    <window class='worksheet' name='Q9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Sub-Category Parameter (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Parameters].[Category Parameter]</field>
            <field>[Parameters].[Parameter 2]</field>
            <field>[Parameters].[Parameter 3]</field>
            <field>[Parameters].[Sub-Category Parameter (copy)]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Calculation_142707840530206739:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A8D532E1-C2F4-42AE-BD55-70AF75C30389}' />
    </window>
    <window class='worksheet' name='Q10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{18505A47-5E6F-4BCE-A9CC-F51EB4C66824}' />
    </window>
    <window class='worksheet' name='Q11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{25ADB9B5-AC9A-41B2-990C-B2A4D6B2689B}' />
    </window>
    <window class='worksheet' maximized='true' name='Q12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Sales (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79FD4A55-F202-4812-B689-6B22C1678FC8}' />
    </window>
    <window class='worksheet' name='Q13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_268527160796651521:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Country/Region:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_268527160796651521:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C57D2705-B0C1-41D7-BD5A-3E7261A9B9B0}' />
    </window>
    <window class='worksheet' name='Q14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[Product Name (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A7BAD9D7-1646-427C-A403-545BB3DA6733}' />
    </window>
    <window class='worksheet' name='Q15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[mn:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{42198BB0-02E1-47DD-908E-04F17F03D680}' />
    </window>
    <window class='worksheet' name='Q16'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Order ID:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[:Measure Names]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Order ID:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F44E045C-5EF1-4E0D-B2DC-B03FEAAD9AE5}' />
    </window>
    <window class='worksheet' name='Q17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Order ID:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2065A6BD-EA70-480F-9C48-CE4AC9722820}' />
    </window>
    <window class='worksheet' name='Category wise sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C8E6DFFA-97D7-4956-A8FB-64E35EF43D69}' />
    </window>
    <window class='worksheet' name='Segement wise sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1n591da1jfszub11jpy521dzq3dk].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{09A37553-932C-438D-9382-DA8759FF3C02}' />
    </window>
    <window class='worksheet' name='Top 5 products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Product Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{141EAC97-93D7-4C12-98A9-5F13373A9C98}' />
    </window>
    <window class='worksheet' name='Monthly Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_142707839798812682:ok]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{39DF4FCD-B981-4DDE-9D91-C0E7B50452D1}' />
    </window>
    <window class='worksheet' name='Year wise sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Order ID:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_268527161139097606:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B2D53E5-9D3F-41D5-9560-CAD0F8DBF216}' />
    </window>
    <window class='worksheet' name='Total orders'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[attr:Order ID:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Order ID:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E8D36E10-11D0-44A6-B5EC-463CC145FB01}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Category wise sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Monthly Trend'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Segement wise sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 products'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total orders' />
        <viewpoint name='Year wise sales' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F29FC945-9D6D-4149-9230-FBE8580F241E}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Details'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Total Avg' />
        <viewpoint name='YoY growth' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1FA86A6A-F22D-4BF2-BBEA-1A4BA9B33C41}' />
    </window>
    <window class='worksheet' name='Total Avg'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1n591da1jfszub11jpy521dzq3dk].[avg:Discount:qk]</field>
                  <field>[federated.1n591da1jfszub11jpy521dzq3dk].[ctd:Customer Name:qk]</field>
                  <field>[federated.1n591da1jfszub11jpy521dzq3dk].[ctd:Order ID:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>0.15538453992545667</value>
                <value>800</value>
                <value>5111</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Customer Name:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Order ID:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_268527161139097606:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{31D15960-A359-4F59-BF45-B5041065D8C0}' />
    </window>
    <window class='worksheet' name='YoY growth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_268527161136869381:qk]</field>
                  <field>[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_268527161139097606:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>0.21441073674451755</value>
                <value>&quot;▲&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[usr:Calculation_268527161139097606:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8792CE78-F9C3-4714-9D28-01714B65F13A}' />
    </window>
    <window class='worksheet' name='Details'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[:Measure Names]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Category:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Product ID:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Product Name:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Region:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[none:Sub-Category:nk]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Calculation_268527161149886471:ok]</field>
            <field>[federated.1n591da1jfszub11jpy521dzq3dk].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B36308AF-FD58-4859-8F7D-D54C7AD7C7B5}' />
    </window>
    <window class='worksheet' name='Sheet 27'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1C49C40B-5EBF-430C-9A1E-D6F1F6924722}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Category wise sales' width='192'>
      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
      GE0CEEb7Hx/YCv4/J2KuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Details' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Monthly Trend' width='192'>
      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
    </thumbnail>
    <thumbnail height='44' name='Q1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAsCAYAAAAzWrf+AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFkklEQVR4nO3cf0zUdRzH8Wd5svyFTU00cmqtKDOW3TcS7DK0wDxRUmYFAYkuLUebBW6U
      0rwKfyYa4WJtCjrWD6MSf+SPspASR1/TEeGPNcLUCUxoO+PX3a1PfxzFHVJubBe2z/ux3R98
      P2/e9/lu9/p+3+y+4wallEIITd3Y1xsQoi9JAITWJABCaxIAoTUJgNCaBEBoTQIgtCYBEFqT
      AAitSQCE1iQAQmsSAKE1CYDQmgRAaE0CILQmARBakwAIrUkAhNYkAEJrEgChNQmA0JoEQGhN
      AiC0JgEQWpMACK1JAITWJABCa5ZrFZim+V/sQ4g+cYP8c1yhMxmBhNYkAEJrEgChNQmA6EMe
      mo/mkhZjwzAMbPEZFFU5e6y7tC+beJuBERlNcm4lTp+12pIMEqIjMQwb8RlF+LZwnT/E6rQY
      bIaBYYthaUEVfu+geqks26qs1qtfiYV11/pFZU0sVD1W1RWqRGu2KuvtpsT/y+VP1JLETer7
      hg6llFu11JaqTHum2v97t7q6QpWS8q76ocmtVMevqjTTrjI7i9zmOvV0ZqmqbXErpTpUw5HV
      KiFzv/Kufqdynnao0h8bVIdSyt1Sqz59OV6tM7ta9/oO8MgqE9M0MUvSCcPORtP7c3Hq2N62
      FLo5U0NrTDzGyCDAwsDxcSyafSP1l/3LavYc5J6li5k0zAJBY4h7JZnmg2W0ABerm4heFMf4
      gRYgiJG2DNIHfEVZC0AEmTtWEjdxJEGAZeB44uwT+L2lq7eMQKLvRMxk4v6tHGp0AR5af9lN
      Yc19PNrtGnq5cRTh9/p8ZRXyIFH962kARoz6g9LiQzS6vEsuZz1/BP3GL+cALFh8v+lyVlFQ
      OphYa9ehAAXgDNvS7ERHGhhGJNEJ2Rxo9N/I9ox4bIZBZPQSCnqc+8BTW0JGvHc+jIxOJrfy
      rzonlbnJPv1X8WVTYM5EBJDFSmZBLMcWRGEYk5m5/CyzHEn4f/7baGsdzOBBvsf60e/8OS4A
      g2JXkH3zBzw73ftZiE3L4cCFehr97iIemk8UsDSrApsjiyifXoEJgCeYsXeG0N8C4OZK3T5e
      yz/StR4cTsqGzyk3TSoOzefXtBcoOtetR00+T85fzTcX2gBwXzlF8YuddS0VfPJxHUMnzWDR
      8g3kbcniseEBORMRQBeLU3n9ZBQr93rH5292vkLoZ0m8fsS3agBjxv3M0UpP16GGY5SPegjv
      hTyYiGVbOVhuYpoVfP3hcwytn4I9qrO0JIs3DjsJnrSY/PzFhAf77yEgAWja5WB59WQ2HziG
      aZqUpIf9c3FHO+3db1V/CU5gy7HOvzVME9MsJnUsMCiWnK+2s+KJO2mrfI/0eXPJPe7poYG4
      noXcPZGzOz+i2umdX1yNJnsOu7l1lH/dhFkxnMov4ESzB1zn2f32DobFTGUQQNs5zv7sxAXe
      tVcdnEp4hggLwHG2f3s/z08b9o/P/AQkAO3trTDiFkKCLLgaqzladcm/wNNBhwdwNVKe9z5l
      YdN4OLRbk7seZAq7yC84QbMH8LRyqbqCmibgzBG+qL2JCU+ksmzNZl56oJ6TpxsCcSoigCzW
      Zbw14yfWzpmKYRhMf3YLztTNLLwLKtfEkr6rc64dm8SapxpYNWcyxtQU9t6Rw4rYzjlmQDvf
      5SQw3TAwpi/ks9HZ5CV1DlEXT1Ndvh67YWD4vJJ8xo1rPgzXG6FxC5m38zViJm/ktoi5zA69
      BVxdbzl+6ElefTySuisw5J75vJPXfe4DLBG8uGkJDsfL2Lddwd1/COMmJZK1PhJuauP7tams
      q2qmjQEMC0/izbjuCRLXPwu32x3ssDuuWjl8ajYvZAz/u270TAefz7y6DsJYsPUgC3pqH5pE
      kZn0rzuQh+HEdSn3uIdl1oBcn/1IAITW/gSmYnvTow7GUQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q10' width='184'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q11' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q12' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAcsUlEQVR4nO3dyW8caZrf8W8sua8kk0syuYmLSFEitauqVCXV1m33NAaYaRg+GOODMfDB
      J98N+OKD/wBfDJ9sA2N7GgOfDLjH43F31VTXoq20cZG478xkMpO577H4QIlVLbFItRhcxHw/
      gKBcyDcfkvHLiIyIJ17JNE0TQahT8nEXIAjHSQRAqGsiAEJdEwEQ6poIgFDXRACEuiYCINQ1
      EQChrokACHVNBECoa8cSAE3TjuNlBeE16kG+2TRNTNNElmVMw8AwQZYlME1MQJIktk81kpBl
      aWfB13UdwzAsKF8QDuZAAYivzDGxmuKzm1d58M0XVAyT9v5LxOcnKNTg4uVhxr9/iq66uf3x
      B9jUH15OVQ/00oJgiQMtha1d/aRLUwA4nA7KJQ1VK9PYM8SwWiW6Nkvk4sc0ZCZJlCDstqRm
      QbCMRZ8BqlRMP9dGOokn8hTyRQqlIg63j1IuTaZQw2W35pUEwUoHCIDJ8vQYa2trjM9u0hKU
      ePR8i4HhPkJqgfUCRLqGsOcWKHlaCYgtHuEEko6jIUbTNPEZQDgRxHEAoa6JAAh1TQRAqGsi
      AEJdEwEQ6poIgFDXRACEunbKA2CSya+wkI5v3zNKjEWfv3jKJJoY5+7qGDVDZ2b9Dk82FqlV
      U9xbuk9JN0kUEsdYu3AUTnkADIq1GsVqFjBZ3JhkKbe5/ZSeYqEoMeix82zzCRkzTMjc4Nvo
      As1eH7OxcUqG7VirFw7fKQ+AQtgfBqBcjrOlO/ErJpphgBIgpOZ5HJskbwRQags8T63gdzQQ
      zcSRpRrPVr7m2dbGMf8MwmE65ecjaMzHJ5lPxfAog2h6hpXUMum2JJLqxWnzoap+uv0hCtkM
      mUqNvuYeKlkdU4ZYIUdVqx73DyEcogOdC2QaOqVKDbfLia5VKRTKuH0+jGqJqiHjcTmolAoY
      sh2384fTQY/uXCCDbDFF1TRwO4K4VRsVrYJDlimbEkYtTw0bfoebXHkLWfHitTuoaVVU1Ua+
      lMbhCGCXT/mKso4dKAAbK/NMr6e59d4Vxu5/g2b30tfXx+TTp+iGycBQH1OTc5jIvHfrAxzS
      9veJk+GEk+JgDTGdvaSLU0CFZDKLza9QzmVp6uqnTa2yHpsnPPw+DdlJkkVocYiWSOFkseht
      WCUQamX4XJgnYxsoXi9uZxWHp4FMKoGeKxPu+sM2yKNdA+hMr92nYo8w0twJwErsHpPZDGdb
      L1HKzLBeynEucp21jQcUTSfXem7hVaUjrFE4DgdYCk2Wp8eJxbaoKR76elp4OLbG6NXL5NZm
      iZWcjPR2oz97itbUhe9Yt3hkepsHmcpkdh7JlMsMtJ4n4mtC9gZpTk+TquWRlAZaVJ2ibuBV
      lWOsWTgK9dMQo2WZSG1xvrkHgFRuhY1CkpzuIOI0qajNhJ0wHltClSq0hq4RdjuOtkbhyNXJ
      J9EKD5fusFDI4VJtgIReXGW9kCHSNMhk7CmyfRWahymVE1QllS7x7l8X6mcN8EK5kqRoemh0
      Oo/l9YWTpe4CIAg/duxLYTa3xKONeS73fMJW4iFzmTitTSNcCHWwsTXJRGKFtKZwK9zNo2Sc
      f9R3jbuzXyK5z9DtlnB6+wjYdj9QtZku8u34yoFrHO1r5Uw4eOBxhJPn2APg93UzUM2imxLt
      jX1kaxqKtL1AtzYO43c1spjXCDV0EKlUwKxiyh6MapJNyY1fTuL3NyPtsscymszxn3/z6MA1
      /qs/uyoCcEqdoGP8Jkg2mr1NlKr5nUfX0mtEGsLsLN+yj9HIME3uBgrVAvHMAlVxUE14S8e+
      Bkimp3kcm8KR0+iy11jJp2kPjbKeWafd34SkhvCrCuuJp8xuzlAy7FxsCeN2hrBTYLUso8ji
      gJXwdo49AE3Bs/wyeHbn/sArz/c1dwPQHhrlz0KjO493BHwQCNFzBDUKp9cJ2gQShKN3YgJg
      mjrZUgbjxU5Zw6iRyEVJl4uYRpV4LkZZ19C0EvHcBhVdbPcLB3fsm0AvZfKrTGwuMdp1G58K
      tVqGWG6TVGEKv8eLjI3FTBKPkUJTXSzl0lxvHzzusoV33IlZAwR93XT6GnbuO+wBzFoKXfXT
      oKrEC5usZFbw2Gxs5OI4bZ5jrFY4LU5MAF5Vrpbo7/iQJlI4/cPc7rlGi7uRRLnGh2duks5H
      j7tE4RQ4MZtAm6nnzKajOMoGbrNMf3Mf44v38QUG8RkJvltb4GLndZTaJg9XHnEu8v5xlyyc
      AgcKQGxphtnNIh9du4hRK/L3f/d7bv3iU2a+v0+qKnP16ijj9+9SdTRy671L7LW7vrlhiM8a
      hsA0qOgaDtXOB32f7zx/u699+4Y9wq2+yEHKFoQdBwpAW/cAmfL2HGFrS4v4A41U8ynsbX1c
      slWJLY7TOPQhwcxzNisQsukAGIax51SpCrIlU6la1XZpGKaY2vWUsmYTqJrmwZMpjGoZd6MH
      1RXAUAwkWcHQdXTdxCZtT5v6kvziSgv//q9+z2o8e6CXb2lw8+/+8tPXHpd2O0HoLUjSD/UK
      p8uBWyLn51epKR7+/J/8ivX5eRq7O1l4+ojJisKVy+d59v190q5m3neA9OIztyzLOwtUMlsi
      lioc6IeQZGnXBdS6AOw+vvDuO0AAJLrOjtB1dmTnkUhvLwDDl2/sPHb15u23fwlBOGTibU2o
      ayIAQl0TARDqmgiAUNdEAIS6JgIg1DURAKGuiQAIdU0EQKhrIgBCXRMBEOqaCIBQ10QAhLom
      AiDUtQMFIJ+KM/Z8DoD1+Wd8/e1dMqUay9Nj3H/8jKpW49njezydXuLIr8EuCG/gYGsAxY5s
      1gDwNLZxdSjE8sIqW4aXTr/C+tIUmr8PTylJRnQUCifQgVoivf4ganQDALNWZDGtcLbdzWLO
      xK1WySSTOFuH8BsqpSp4eX2aVCvm5zBNk2r19Rndrerj1XV91/GFd9+BWyLHxqaoKU7WJu7j
      bmzF6xsitTjJiiZz+dIwYw++YNnu43YfqNLr06Ra0bYoSRJ2u/21x62ahUZRlF3HF959B1pC
      Ogcu0DlwAYDzfV07j3e0frxz++Of/Qxg1wksBOG4HagnWCzUwrtO7AYV6poIgFDXRACEuiYC
      INQ1EQChrokACHVNBECoa/sGwDQNDEOnXK4cRT2CcKT2DcDSg+/49sG3/Mf/9GsOdg1nQTh5
      9g2A3Q5PxhYYOBNGTEwqnDb7ngrRdm6ECymVUKQR71FUJAhHaN81wMzXX/N8fpXlp5Mkj6Ii
      QThC+waga/QCaiVOQvHSeBQVCcIR2jMAy88f8cW9ccLd3YQcKq/uB9KrZaLx7fVCMZNgdmkd
      0zTJJqIsrcUxTJP42hLR5MHmABOEw7LnZ4BQ5Awjqo3ffvkdmhREf+X5reQmqxtpwi0NPHs+
      S6NXYWZVIR2P41E0ohRZ2yihVGIE3nsPtzjqIJwwewbA7Quy8N3X1FQ/4ZD/teebw51sZYtA
      BZe3lTPDfh5+u0ZDT5iwUmMtsUhj9wc0ZidIl8DuOJ0tkflilMVchoHmQRwvJkMuFKOUlUbc
      5JjbinKm+RzJ9Ax+fy8uKsg2PzbRT3Hs9gyAaZp0jpznSsM6j6aS/GFToEmpkCeXy5ErmJQK
      cZankng7O0htbKCpGr6mdqIrM2TLRYa6QZVPYUukWWF6a40uf4DFfIKRUATTqDIVvYOt+WPa
      5AqRQJDFxD0qUhO57CoeRaavpQlFdBQduz03Suaf3CHnCbM6PYmsSK99cT6dxOVysZUpMnS2
      l4ozzEBnK4OdTbgaI0Tae+gK2WnrP3eKN39UvEqV8c0lvHY3AGuJ50RaRrBJMm2+EIlikZ7m
      UaRqnKpWJFVY58H6FBas/IQD2vMtMrEeQy/+A3r4Jv3pWTJA086zEs2RHpojP3z9QHD7/0Bz
      O4EXj7V2nLG45BPGqJAz7AyGGtgspml12siU06xlV0jKXZg5E1/gDLLs5ErXNZazOdL5AjU9
      f9yVC+wTgIu3bvH02RL/+NYQsWWX2A26G8XNSGsv64U8F5q7KFeznO+6zTm9RNGQyeVXSFcy
      FG0+3E47kUCYkEOiLPlAbAEduz0DIKkeLo6cR1Fl+vp6j6qmd47X3cbZ7a0fnK4GAGTFhVcB
      b0M/4R99rQ1weiM7a0jheO0ZgCdf/C3jS1t0XbtMk83F+UvDiKvjCKfJngG4+vNfYnzxBYVq
      CU1yHFVN7zCNp4vfkDad3Og4x73FOyiOECNNYZ6sTxAMDjLS3HncRQo/sue+GcXmZLC/heXF
      dR5PTB1VTe8uPUPebOSMQ2M9nyLYcIH3Oi6SzS7TEb5OsRg77gqFV+y7czKzVebm5z9ntL2R
      0lFU9C6THNQqa8xk0iiyjXR6kv/z/O8xVTcL0YcUDVlcJfuE2fdIUc+1D6lWysiffXyw6yjW
      A8lBo9tDRnfQ6HQTlxW8Dd00eHzYM3GC3pbjrlB4xb7LdHRqGndfP9mpaRqGh0RPwF4kGyNd
      t3buXu/9dOf2R/1tx1GRsI89A1DMrPHr//pfkPr6cUo+/sXw0FHVJQhHYu+T4QIR/vm//Avu
      TK9gl71i+/UVv/7tODOrWwcaQ1Vl/s1ffGRRRcIfa99NoMzaOuHhy/R4HOIYwCtmVrd4MLV+
      oDHsqmJRNcLb2HcvkL81wNOvvuR3X9x5rSFGEN51+64BFFeQRq+DQklMEXQcTKPG8/UH5KUg
      VyLnoJbhzvJ9CtUyfS3DLG3NohsSQy29LGVSXOscJVVIE/aLPU5vYt81QFPXIH/+q1/R5VOp
      7fF1yfUF7j+aQDNMEqtzjE8vYZgGS9NjzK0mLCy5vmTyyxiOTq6GzyIDii3Ah32fcybYQUug
      i88Gfk6bp4FEIUXE62A2No3DKU5bfFP7BiC5PMXf/Pqv2bQF9tgFqjO3kmCoXWFyepnFLR2f
      mWNleZYto4FybJ7cq/2UwhupagWWN8f5v9O/JVvd7nCr1dKUJA9eRSWfm8Pu6eN8qItYvoCN
      HF9P/y2z2fQxV/5u2H8TSC9Q0BT0eBwd2P0jm4xTLvP9RIbu3iE0X5CmFy2RvvAHNDpS5Mrg
      OmUtkaZpzaXC9mq3dNtbcbJM2bBTyq9RsreQT8/S2jhCrVZmbitNf1snSBIhu5ugw4auxdA0
      Tcxs+Qb2DcDWeoLI0DCZsTFK8BN7gsqUKjbaw25yxRqlbJSMbNDR3cP89EPiusaVntM3S6Qk
      WdPmttcMlHZ7K58O/+kfPui9vnPzYve1ndsD7aMA/KrpnCV11YM9l5B8Kk7T6E3KC7O4hod4
      vS3+JRejF4fIFDX6mpuoFhoo6gqNAS9uuwPT5sEpmj+EE2jPt7Dxb7+jYvcwPHoJfW2ZvbYq
      Xb4gba0hFFnC5QvSFPQhSRL+hhABr8visgXBGnuuAXqHuvhf//2vCHhU8nITt4+qKmFXxcIS
      v195RmfoPFJpmWipSG/bVXKpx6zmi1wf+BNCdnFg7Y+xZwBa+i7zl2dG0XQTm00VLazHbCa+
      QIuvhQanh7VclaDTzWJqlgallV8MBnkUjxNqD+8/kLBj309xsqxgFwv/iWBTHLQEOpjemGS0
      4wad/lacqgPdqKFpZWTFdtwlvnNO7dV6TqO+lj7mYk8JeCNspmcZ31xhIDREg63KVysr9IfE
      AbA/luhxeYc4nC3c7v/Zzv1I8/b/TeEbnPKrLx0asQYQ6ppYA5xQ6XyZv/li4sDjXB5o4/pQ
      ZP8vrFMiACdUoVzlf383c+Bx3A6bCMAexCaQUNdEAIS6JgIg1DURAKGuiQAIpHIr5GrbHUuG
      XmIqNkaiVCBXiDK2/pRsrUYsNcNmqUitmqVsnJ7rg1gWgOzmKt99+x3ZisHa3CQPx6ap6RrT
      Y98zMbcmLqlyQmm1FBMrX7NY2G6emY+Po9oDzG5MUjGgxRtgYvkrlvMllhJTLKbWUE/ReTEW
      BcBgen6dq+9dx1VLE684aXMbrC1NUXZ3Yc9FyVrTnCVYyTRZTCwx0HJ256GgK8BCfBxdduOx
      qzyPjhMMDGLXU9SMGunSJvdWnqKdknc0i44D1MhtJbj7zVc0NkbwBIP4FDvryWVcbYM0EKVY
      BQ+iJXI3u9Zes6Z2wzD2aI002SpEmStGKbsddNm7iGfidDQMEc0sE8866W0aYi69wgedV5lL
      rlEol7GZeYqVKs5TsAFtUQActLY1kqvqKE4XW4vTRA2J8+fPMvH0a1YVJx/2ipbIn7Jr7TZr
      apdlec+Wyxv9f4Ku5SjhplbNMBi5wlxynvMd17AbadZyaa50X8Mma3Q390EtwJam4nPaT8UZ
      wpYdCR4avUZV03HY7Rg9YXRTwqYq3PzoJkiKmBP3BFNU3/YVP9Tts0nPtl548YyXoLfjxW0b
      HgWwteE5+hIPjWUBkBUVp7I9nKLadq4eYbOJCyoKJ9cp2IoTrGIYFe4sfEOxmuf7hS95GJ2m
      Us1wZ+533F17ftzlHQoRAOEFk1hyinStSrqwisMzSJAU8YrJaPdHyFr2uAs8FCIAAgBaNcGT
      RBRJS6GpLUjVBaa31kGSWdqYpLvl/HGXeChEAAQAJMXHxfZh3DYPCgb5SgHV3oyt+Izx9DqT
      0UlO46Ec0Q8gAKAoTtoDnbQHtqdxjfh+vvPcPz3FF5oWawChrok1QJ1ajKXZTBcPPM7lgTZU
      5d19HxUBqFO/uTPD392bO/A4/+3f/gqf27Hrc7pe5PHSXTR7M1cjF7ZPojMNJtbu0d12nfWN
      +8RrNkZbOxiPLXCp6xq54hatvqPb5np3oyuceJKkMtx5E08tTvrFJ+hkeopYYYuCrtEUHKbP
      WeVJIkrY5+H5+jSG/ObHmXOFNR4s32Wrsj15V62W4cnKXRazSQyjwlJyAc0w2UhNs5xNoVUz
      5LU/PH9LBEA4NLKssrb5iDQenLKJruWYSMYJqCaFmkGtsk7O1sWNlk428jlccoEny18ymYy9
      0fiG5KA/1M3z6DgAugmdTQPENifYLCRIlZKUtRKrhSIb6VmW0jHsryzxIgDCoamVN4mWylQr
      SbLFJImKTruviXylQLkS5fcLj4ln5ylKAbp8jYS8zciSjG6+2XRCLpvM05WH+D3b10N1qk4W
      Nx6j2Rpo9kZocDhAduCVymimyVZxg+8W7lD+0UpAfAYQDo3qaOH9ngZARpVlTCRaPUF6W4aR
      gP7A9ol2qqIQaDyLhMRn3giy/GaL5VYhQ1fzWVYyq+T9PgwtT9DfQyW9TLKYJJaLUbWFOdt+
      hen4IlptC1XSKOrsnMotAiAcGkmSsCk/nAz58oRg+cVp5Hb1xydKbj+r/hEX+PU5vBQKGS51
      XMbQizjtXuRynv7wVVyUaPJ1o6KBCZ2NZ1DNFjYrGg0/egkLA2CytZkkEGqilEmSq8q0NTeQ
      2oxh2H2Egj89xZ4gvA2Pq5k+14sLpNoCAPQ0+V4866Pf/cPeJLcMECTyysnJlgWgnN3kqy/v
      8fmf3mJyehmHrGPqrSyvpJFqS3g+eB+X+MRRt9LZBR7FplEdrXzUdZFnS7+h5n0PpTBJvFzh
      XNdHhF1HP5OQRQEwWFzeoK+vE61UpjHSQfjFLJGhvg9ozE6QKoFNzBK5q+NoiXz5+z+oWk2j
      Wt2/28ntbKXdvcWWDqn0PJrso1TOoZc1ml1OZmJLNEV637IKnbmNx0TLJQZbR4luPiFn2Dgb
      6mI2MU2uZvJR78e45dffga0JQDXPxmaCRCwGXjflYg3JVsMdaCUeXaJYLNHbBaoiWiJ3cxwt
      kfIuC8PbsNnUPVsuXzIMaPC1kMrEebJ+lwomGWz8sv8ymewChZrrjcbZlWlwpnUUT2qKvGEy
      3HGDlY2HmK5ObveFGYtO4XM4UHZZ1qz5Ldv9fPzpp+TSaVyBANnYMomKjUhHG7I2g948gFdM
      XVXXtrKLTGwu4nCG+Xj4n4EWYzbnIpGaYS6b51rPyNsPLslUq0k2SmWa3SrZwio500YQnUxu
      GY+3c9eFHyzeC+QLBgFoDHfzcq6SyJlBK19CeEeFgmf5NPjD5VewhTnbCHCdM20HHFwvM5OY
      J1su4C1vsZxapWrUaDdN1gtFBsMNP/mtYjeo8O5TnFzt+WTn7rnmvp3b7a6Le36rCIBgOU03
      +Ov/N3bgcfoijdy80GlBRT9NBECwnKYb/M9/eHbgcT67cmbXACxvZFiK7TVt+5u5cjYsAiC8
      e76bWOV/WLCG+Q//+hfiZDihvokACHVNBECoayIAQl0TARDqmgiAUNdEAIS6JgIg1DURAKGu
      iQAIdc2yUyGeP/qOjXSezqGrJOfHyVYlrly9wNj979Hsfm5/dONUTa8pnA6WBWDw4g28C88w
      KkX8nWcZVGvEVqZoG/mYYGaSzTI0235oiXzZCmlNSyTUarXXHtd1q1oijV3Ht6olcrexrWrn
      NIzda7eqJVLTNGo1+bXHrPDTtb/ZdYP2o2madQFYmpvC19pHUCkysVagbK9ic7golAoUywZ+
      dbu1ELYXemtbIndvf1QUi1oiZXnX8a1qidxtbNWi2uWfqN2qlkhVVV8bX7doDmFZlg63dkWx
      6jOAzmYsyuSTB6wXVLzaFgtbZdq7z2FuPiOlBGiwbS/sr/6zymGOjXQMtVtZ/mH+bnYZ37ri
      X6/b0vElyao1gML1W5//cLflEi/7+0eufWDNSwjCIRB7gYS6JgIg1DURAKGuiQAIdU0EQKhr
      IgBCXRMBEOqaCIBQ10QAhLomAiDUtUMNgGmapBMbJDOFw3wZQXhrhxoArbjJs7koM2NjlKw5
      +1YQLHWoATDySZr7Rzkb8ZAqHeYrCcLbOdQASC4/2dgKa4kSfudhvpIgvJ1DDYDNF6bFWcTf
      2S+mSBJOpEO9PLokyXT0ndu5/+M2yJe3PU4bPvdbTo72gtdp37W1UpGlA48NYFOUXcd3OdQD
      j29Xdx9bxpraHbbdx3faDl77S6+Pb1oyttO+e+12m2zJ+LIEkmlFU+4betkLbBiGZW1trzrM
      sQ97/He59peLkdXdZi8dVu1HGoCXNE2zbArToxz7sMfXdR1Zlg9tITrM2l822R9WwA6r9mMJ
      gCCcFCd6iqRaLs5X98dRPSFu3xix8J2xwpNv7uPoHqTHZ3L34TiKJ8T710ctuXZRfGWGqYUo
      jmAbTXKWpXiWM8NXOdMWOPjgeomHDx6TypYZvjrC3NMnaKqfmzevY7fkzddk/vHXRJUOepw5
      plbjhM9c5FxPsyVjP/z2d+R1N+cunmf24V0KhosPP/kIlwW1V/JJ7j14iq+1hw5vlSczqzRF
      znJp8Kcn2jvRp0JsRre4/OFtml0S1lxp5iUHwyPnsCuQymY4f+VDIkGJYtWao3XNHf2MDvcT
      cNspyT4++fAG+UzCkrFRXETCIZweD0YpRcfQ+wxHXCQL1lwrp5LZpKA24HNAuiLz6aefU81F
      LRkbahTyGt5gAz4pjb/rBjcHG1hNWfPX3dpYRVfdeDxuNjI1Pv3sM6Rqas/vOdEBsCsmhVKV
      qqFzWHtRZQkq1QrVqoYiW7OGycRXSVRUBno7MGpVKtUqkmTNT2DqGoHWLroabaRLBtVyiXK5
      hk214k9pMv18knh0lcnpBXStRqVawTQt+u0bCpdufkSXX2I2mqZWKlAoVnHarRlfsTnp6h2g
      mlwkX6pRrtYwjL3/pid6E6ipu4fvHzzE1dyNZOWFcrQC3z8eI6/D6KUrbMyM42zqxm2z5jW2
      kpusJwvksh10hNw8HJth+OJlS8Y29SrPx55S1FQujHay9OwpRVcrHS4rapcYee8TjEqB9XQJ
      v1zm+3sPGBi5ZsHYACYbyzNsZGucHx1lY+YJCzU/V33W/N6b2jqJjY1huEJc6PXx6N49ugZH
      9/ye/w9G2LpJ4OzCKQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q13' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q14' width='192'>
      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
      98nm6/8HmGXoBBdSYYUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q15' width='192'>
      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
      uM2YVgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q16' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q17' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAYs0lEQVR4nO3deWyUd57n8fdTd5XLB/i2MWAbH4ANJgQTMAFCQgLpJCSt6elkuqdHPfvP
      7K602tVIszurHanVq1lpWyPt8ce2umd6epIeJb3bnfQkhIQzIQQIl7HBYGxjfOGjfF9VrvN5
      nv3DgXDY9fgCmzzfl2QhXE899St4Ps/zu57fo+i6riOESVkWuwBCLCYJgDA1271/GRwcZL41
      Ir/fj9frndc+hHhc7gtAamrqguw0LS1tQfYjxKMmVSBhahIAYWoSAGFqEgBhahIAYWoSAGFq
      EgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIA
      YWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFq
      EgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIA
      YWoSAGFqEgBhahIAYWoSAGFqEgBharbFLoB4NE58+A4dQ25efmMvHrubxATnfa+P+/0ker0A
      9LZe58SZWip3PEtQVSgvzFuMIi8KCcC3lN2bzYGdlejBYQbGQnTUtxJyp+JruER2ySYOf/hb
      KqoOsO+5cq7U3+aP3noTfbSbYzcGsA+3cLUzxHde2sbRDw+ypnIPwbZqhpx57KvauNhfbUFJ
      Fehbqr+ziVNfVTM0NsTI8BA3WoYpyvEwOqESUxzsen4fLz/3FBZUFJsHh9WK02EHHQYGB+hp
      raa27ibDIQsh/xg9A8MQCaMu9hdbYBKAb6k1G7bz+st7SPJ4cLlclK5fi9PhxKpF6B0cwTbR
      x6df1KDhJDc5yq/ffof6zlESPU78fj/JqVk4nQk49AD9Q+N4XTZ6e/qILfYXW2CKruv6Qu5w
      YGCAtLS0hdylEI+MXAGEqUkj2GwCffz6/x1CVXX27t/HpdOnKNmym1TNx5EvLlP+7EtsLs5d
      7FI+NlIFMiWd05+dQFdj5D9dRc3ZM2SluineuINkt3WxC/dYyRXAhMZ7m7GmraFyTSJ/+PAg
      N4dCrMsr5f33/pHs4m3s31E2r/3HNJXxcPjrnxDjkTCRmEooGGOsT8XjspPkcbI8yU1Koovl
      iW6cdhuKskBfcBYkACbU0trL2opthMY7CYaClJVvIhwaxaooOJz2We1LB2KqykgoSNNAP+3D
      Q3SNjRKIRghFo9xbvQiOqbTXhu7+XQHcTjuJHgcrM5PZWJhJWUEG2amJOO1WlMeQCKkCiTnR
      dZ2h4AS13V1c7/PRPTaGTvxD6cEATCc3LZGq8jy2l+WxOivlkQZBAiBmRdN12oeHONPeSsNA
      H1F15kNjMw3AHTarhbWr0vjuzrWUF2Rgty18+0SqQGJGdF3HNz7GseYmGgb6UDXtkX9mTNWo
      a+mjvq2fkpVp/GBvOetWpWOxLNwVQa4AwtBENMLnt25ytqON2DwO/NleAR5ktSjs3rSat54v
      Iy3ZsyBVI7kCiGnpuk7L0CAf3rhGr398sYuDqumcqG6lurGHvzjwNJVrc7Ba5jeWKyPBS5yu
      63d/HuV7HqTpOmfaW/mnyxeWxMF/rxF/iL/77VneOXyVSHR+0/PkCrDEXfrsY+q7hil9aidb
      y1bP6D0f/eaXDKsOsoue4sUdG5ltRSEci/Fxw3UudHbMurzTsSgKTpsNu81CNDb/9kNM1fiX
      0w20+Ub4y+9vI+mB+x1mSgKwxCUle9G6/KzISeXI//0Vl3ot/PjVrRw5fgp/RMHrtlFVtZ2D
      hz4md+023ty/g7TCjRzYXsnJY0epvzjIwc/Ps/fFV4nZErH6fWzcWol9mvpzOBbjt1drqO/z
      zam8NouFRIeTVcuWk5uUTHqCl2VuNw6rDQWF6B6NSFRlYGSCroFx2nzDXG/tZ2B0gvAczua1
      zT7+2z9/yV9+fxvpKQmzL++s3yEeq7TV5fygrIJPDh0ioiWjDN9iMKKwc98BfB1dFK6wUnfm
      ItbMNaQmuu++LzIxxHBQIRYboSgvidZ+O6nhi0SXFWCb5powefBfpr6vd9blXOZ2szErl/WZ
      WeQkJWGzTNNl6Zn8Y0V6EhVFWQComkb3wDjn6rs4fbWDNt/IrD77RvsAf/ubL/nJj3eT4nXN
      6r0SgCUuPNLF4cM3eO6VV2m/eIKkjF3kZGRiszvx2KwkeRW2fKeQ8JGPcXmTAEjUR/ndobPs
      /84+/B1XqLmdyKbiFNqv6aStLppyykFUVXn/2pVZH/y5SclUrcqnPCsHu8Uyp54Zq8VCXkYy
      K9KTeH1HCXUtfXxw6gb1bf2o2szaMa09I/zs3TP89Q93kOiZeXVIukHNQotwu2uIFXlZD53/
      NV3n6M1GTrbcNBjL/UaCw8GegiIqV6zEYVv482g0pnLhRjfvHLmCb8g/4/dVleXxH/74mRkP
      mkkABFd7unn3SvWMD/6StAzeWF/OMrfnkZYLwB+M8PbhWo5fakWbwaGqKPDDvRv4o93rZrR/
      CcATqrOhhs/O15CUu5Y8xzBXW0Z44ZX9XPnsY/z2NF57ZT+eGcxrG5oY4+fnzzMWNh6gslos
      7M4vZE9h0fR1/EdA1TROXWnnFx9VEwwb35Rps1r46Z/vZn1+huG2Mg7whMotqWDvru1kpbq4
      2diJ0+VCDwzR3T+My+PFZjE+r+m6jtb5c9bZrxkeCFZF4cDaMl5YU/JYD374OngVq/mrt6pI
      9DgMt4+pGr88WE0gFDHcVgLwhOpvuU5X2MPWTetJylzF6y+V89WlFvLLtlKconGzc9BwH5Gh
      U1hGvmCn4yhvLTtKhj0w5XY2i4XvlVdQuWIllsWYtA8oisJTxdn8lz/dOaMQtPlGOXimyXA7
      CcATamigjytnT/DpqToqN63mw8O1PLtnG7meIDf6NQpylsd9vxbzE+z6Z0BHAVYozbyZ+D6V
      CS1YlW+uHhZF4aXiUiqycx/L/HwjJStT+fffewbHDBq5B8820dk/FncbaQOYVKj3IBPt/+eh
      3+tAm1bK8UAVQ1EnT+fm8d31G+Y952ahfXDqBu8cuYLR0buvcg1/cWDztOFdWt9KPBZabJyQ
      74MpX1OA1ZYG/jTxtzyX7ue1tWVL7uAHeHV7CdvWrTDc7rOaVvpGpq7agQTAlKIjF9DC0w94
      KYBLifD8mhKcj6CPfyHYbRZ+tG+jYXsgElX55Kub004MlACYjk647xMw6PV3LN+JLWnT4ynS
      HGUt9/LdnWsNt/vqeieBUHTK1yQAJqOGuoj5b8TfyOLCnfPHS6LRG4+iKOyrXEN6cvwBud7h
      APVt/VO+ZhAAndstzVy7+CVf1jbPeKRQLF2R4XMYnv2XbcfiMq5fLwUel539zxQZbvfl1amn
      dhteARovX+R0QxtjnbdnXzqxpOiaht7biqLEO2MqODNeRlGenMrBsxtW4nXHbwvUtfQSjT08
      3TpuC2eoq4ec0kLom8C7LGt+pRSLTgmFcdcX4tIyiCWNEfV0EvN0o9rGgMlRU4szG5vXuF69
      lKSneCjLz+Bcfee024xPRGjzjVC0IvW+38cNgNPjxjrmJjPdTVRf2vVBMQOjYyihCApOHAPp
      OEhHVyrQPBPEvANEPV1Ys7Y+UWd/mGwLbF2XGzcAMVWjoWPwoQDE/aYJy1KwhoY4cewYYzFz
      rRn5rTQ4/NCvFF3BGkjA2buKhNbtuJTn5rRr1T/Gv5xt5nh1C9Wtw/e0MnRGR8Y5cvomo5oO
      us7oyBjHLzQzFJq8NTISDlNTd4sr3RNz+15AeUEGRqul3Ooaeqg71DDqIdXBd157BVt0+sEE
      8YQYMZgW4HCgLEue0677egdZVZjHC5sL2Jy/7J57DjT6RyNE/BNMfH2jfv94BDUcJBCdPBgH
      hwMkOaB9JDynzwZI8brISk2Mu03P4PhDN9jEDUA4MMLo+BjHPv6UsW/bo0HMaNzgxhKnA9yz
      u6XwjjA2Ots7OXr+Jo19957JraxZlUqic7K2rVgsrMlLw+v8pkaRnbWcrKS53dR+h81qIccg
      AINjwYcawnECEOK9v/97evw2MpOz2LZ9w6xXFxBLzEQw/uveBLDOraq7ujCPVysLeGHzapoa
      bxN59AvHPUAhJ80bd4uxQHg2VwAXP/y3/47NpTk4k6D6/LWHeo/VWJRIJGo4IUksAZoGkalH
      Q+9yz/0sfKvNR+dwiOHhcWI2B4oa4VrHZJ07FI4SUVVC4RhRVSMUjhKNaYQiMWKqTiQSIxRR
      iUbVOa0MAZN3giUnxL96haPqQ1eAuL1ANruL/KK15BdN0S2mRai5eJFAWGPj1q2kGPTDikWm
      6UbjX2Cf3dLo98pfkcr1W310KzZerlxNb2c3IRLRohHqbvWRkJlC9y0flpx0+rr7sScm0dfd
      h8eaQWBwgP4JhSzLBE0+G+V5KXMqg9tpPG/pwYW0DN6hc7uhljO1DZRU7KCiNO9uNUgP+3Fn
      FbDOFcQXiJDosN5djSwU+ub2Oss9KwWoU6wkrCgKlq9nG2qa9lAr3eh1AOvXl21d19GmWLvS
      6HWjMj7q77AQ3/FOGaf9N9B1rJoav9E3j0VnLTY75SXfPFopKzeLHKsFi6KwZd39D95elbry
      /jen5FI850/+htVq3H0bDIUIhWx3/70MI9Pa1ETy8hSabrZSUfrNF1GcXkI91/kqpPP09ry7
      /0GKouByTX0pss/jDPO4GJXxSfgOU9K0r+v3capBRlWkWbA9gqXMjQSCxuVP9HruOz4NA5BV
      UIo3PZeMjNT7G8EWB5u3PzuXcorFYLGA3Qbx2sEzuId2tsZGBnEnpmKPkwc1EsYfjpKcGL8R
      a8QfjN+NardZHrqTzPCaMdBax4eHPuX0hXqZDPekM+ri9PsnrxQGmi6f5Gc/+c/8r1++x1Aw
      Qp/PRzASo/78EWqb+4hGw/h6upkIR2m4+hVjEUCPceh37/D2O7+hZyxCMBBgeGSUaChAW+N1
      ahqaCfpH6BscQVcj+AMBRscDDPX7GBk3HiDTdZ2ewfjdvIluJ7YHqkkGVwCFsmd2kTKskZI8
      +3UXxRLjTYDegelfD0cgFAaPe/ptgOKndvPymJ+Ura/QfuET2sc1YooX73gjo/3J5CblUHfl
      Cn7SyL0z727oOlreHr63NpkL1y5x9fOTbHzxFSZuXycSU3DmreHowY/A7WTdymzePtnKgb3r
      qT5Rw4bdz7K9ojRumVTNOADLk9wPBcBwOnT1+c+pu9LE5QtX428qlr7kpPivh8MwGn+0+EH+
      CZ2dzz+PKzZO4doKKrc/TXdzPW0dHdTXt36zoSuJ8HAvMU3F5kqieEMVz24qwZKYzq6qLTit
      IWou1tLb7ycaC7F1z342l66jvCybq1cbMOoc9Qcj3O4fjbtN1nLvbAKgMdg/yKqCYoZ9N7Gl
      yI3uT7zUZfFf1wHf1DeOPChtRQFeG5RvWsuxDz5gRdlm0jNzOXfkMN70DBKXZ7NrezlZuQW4
      bEDCakqXj3Lo2HE2b1hDfmEeFquDvGQrh09fITM9n9fe2EtC0jLScgoozEhA16IMDo1RVFJk
      WFe/0T6AqsavpK/OfviBe3FWhZjg1//jF9izV7HrhZ1cP3uVF1/bY1gQWRViCfMH4INPYIp5
      8XelLoMDLz2+Mi2Q//3785y43Drt6xaLwn/9V89R9sBqcXGOZ4XCDVV879U93Dh7nI4Rg2F0
      sfS5XZBiMNltaGTy5wkyPB6kpjn+8wwSXHYKp1grKU4j2MWO557GYrHw4qvfJxKNylygJ53V
      CtkZMDA0/Ta6Ds2tsKWCRXl0+xxcvuljaCz+Cbp4ReqUI8VxrwB3RidRFBwOhwTg2yB/pfE2
      N1shMPe5+Y9TNKbyh1MGN/kDOzeumvL3T9atP2L+UpdBcvxpw4QjcKOZpT7LUdd1TtfdNlz+
      cFmiiw2FmehajJ6uTobvGVeQACwyXYty/rNDnLxQzwwfhvL1G1X6BiYXwI0Fh/no97+n3TdI
      Z7x+fpis1hQXGu+/oRmG43crLjZ/MMJ7J+oMc1qxJotliS6aas9xue4G9U1ttDZeYyImAVh0
      I75G+qKZrF2RTHBijJrqWgIRlYGuFq41tjHS30X11QbUaJDWW01ca2wjFglSd/kCX9U0ABqf
      HfmcHftfJlmZoLbxFgNdLVTX1hNVo9TXVtPZP0pvx02uNrSiARSsNB4Vjkbh/GWYYvLfUqBp
      Ou8ev0bvUPw7Fa0WhQM7SlEUhezsLAZ9XWDROfz+e7x/7Iw8I2yxJWesIc16jM/PDeIJtXG6
      tpGNbfvx2FXKyko4efIMq1d5+fKLfjpDMTxaALW/hXF3CjZLEIhg9WSwPMEDlslZuC3XL/K7
      I2eYePNHfPnZGfa9nk7DyYO4Vj3DupJ8LB43rFkNdQ3xC9fTB9caYMO6Jdcg/ur6bY5dvGW4
      3ZbSXFZlTvZ8qVYPe/a+wIWLV3hm5y5SitfKFWCxhf2D9I5GITqOIzGdpyp3sWH9CrTgCG2d
      fShqkOZWH54EJ/lF61iZk45CjI6WNgKRGOAkyTrM7z/4AzfaJwexugdGqdxSTijqoSg3gStX
      mygqLqK17jJjKpMH87pimGbW7n1q66Gj65H+G8xWe+8IP//wElE1/rwlu83CGztLsXw9zdvt
      stN4/TqbnqmisKSU2+3dsjz6YtM1lUAggMXuwmVX8PsncCV4IRYmoio47QrBsEpiggtVV0DX
      sCgQCEzgcLlxOuzomsq4P4DL40EB9FiEiAoup4PgxAQOtwc9GiaGhQSPe7I3T9fhWiNcrDUu
      pMMOLzwLmemLfiXoHhjnp29/YTjvB4yXRgd5PoC5xWLw8fGZDXy5XPDcdshanBDouk7XwDj/
      /d0zdPQaN85Tk9z87F/vJc1g3VCpAj0hRvs6OHX2EmFVp/NmHWer69F0lWuXznD15vQLQsVl
      s8G2pyfvEzASCsHxL+FW+2PvHtV1nYaOAf7mV5/P6OAH+PH+CsODHyQAT4yvzl8mO9nK+dpq
      LlS34Blv4FJ9JyRm0HCtZu47zkiFivUz2zYaRT99gfozdQSCC3/zzJQfGVP56EwTP/2nU4aj
      vXe8VFlI1YYZDPghT4p/YuSkJnDuQg3W7HwSVB8XGxVefjqPYOtlCovnsZbnnQZx/xC0GS+A
      3KFa+enRG+Re6eHP9lVQXpDxyJZRv903yj8eqqGm2Tfji86a3OX86KWNM36YnwTgCZGamUPG
      4BgpOcm09KezKidMw/mTtPhGWbvGTox5/GdarbBjCwRD0Dv9dGi/YuF/9mgEYzrNXcP8za8+
      p6o8j9eqSihekXq3t2U+7tT1D55p4rPLrUTizVx9QG5aIv/xT6oMV4q+lzSCnxDjw/0MBVTy
      crMYG+xhNKSQnZrA7S4futVFQX7e/Ouz/gCcOD3lGqI68ItRO5/2P3zjucNmZX1+Onueymdj
      YSaJHueswqDrOsFwjPq2fk7WtlHd1MPENE90mc6yRBc/+fFuVmWmzKqNLgEQ9wtMwNEvHpoG
      cSZi5+9uRw2nayR5nBStWM76/AwKslPISvWSluzBfs/N6KqqMTQexDfkp6N3lGut/TTdHmRg
      dG4T8NJTPPzVW1UU56Uab/wACYC4n65PVoVOnYPuyQfp9WDjP3VojMxyvUNFmXzKu9WiYLNZ
      cTtsxFSNYDiKpumomja7+U9TWJmZzF//YAfZqd45tUUkAGJq4QhcrCXc3M7f+hSuLLHVkRXg
      qeJs/s0bW2bU3TkdaQSLqTkdULWF2ynptH5YCyydANitFr7/fBmv7yi5r2o1F3IFEHHdWW/n
      Hz6+TE2zD22+dZZ5UBQoXZnGn+3bSOnKtAXpfpUAiBmJqRrnrnfy7vE6ugbGH/vnJyc4efP5
      MvY8lY/LsXAVFwmAmJVoTOWL2nYOnbtJS/fD3aULLWu5l5efKWLv0wV4XAu/LqsEQMxJKBLj
      RvsAx6tbuHqrl/FAeMGWzvS47JStTmdXxWoqirJIcNkf2WizBEDMi67DiD9IY8cg1U09NHYM
      0Nk/9tCTWIxkLfdSlp9BWUEG61ank5HieSxPqpcAiAWj6zqarhMKx2jvHaV32E/fcIARf5hw
      NEY4oqIo4HHaSUpwkprsISfVS15mMkkeJ1aL8lgO+ntJAISpyXRoYWoSAGFqEgBhahIAYWoS
      AGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBh
      ahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoS
      AGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBh
      ahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoS
      AGFqEgBhav8f86zh6YIvZJ8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='104' name='Q2' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='159' name='Q3' width='192'>
      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
      bgAD/B/cV+ipWaaVxwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='44' name='Q4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAsCAYAAAAzWrf+AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEuklEQVR4nO3cf0xVdRjH8beBN4xVK5WJyjRXaFr+IceCNmx3azgzCwLnRpNrunanxEzC
      bCMtZdRSly5l2iYTNm6uTRhJk8KstKXucgsGA8GSUIgfDVleIQQue/oDSHQ641oBfp/Xdrdz
      z/c83/v8cT4757tzdseJiKCUoe4Z6QaUGkkaAGU0DYAymgZAGU0DoIymAVBG0wAoo2kAlNE0
      AMpoGgBlNA2AMpoGQBlNA6CMpgFQRtMAKKNpAJTRNADKaBoAZTQNgDKaBkAZTQOgjKYBUEbT
      ACijaQCU0TQAymgaAGU0DYAyWuDtDvB4PP9HH0qNiHH657jKZHoLpIymAVBG0wAoo2kAlNHu
      IAA+2stySUuwE2VZWNGxpOVW4P17uI78tFiiLYso+0o++KYZ3+BQexm5aQnYoywsK5rYtFwq
      Bgo7q/PZsjqGaKt/LGb1Lk61+27y+3eRlhLeX+dkW3HLSHcyppRnO3E6+z/r3thMVvE5vH3D
      nET8dkK2LV0vOaWt0i0i3RcLJNVul+0eEZFe8WyPEXtqgVzsFumuzZakyETJqR+o3LZU1ueU
      Smt/oRSk2sXeXyiNx/LkSGWTdPaKSHerlGyJkcjXC6XN/0ZHuQ45tSdTioo+ka1Hm0e6mTGl
      7MABKRvY7uloEPfBzfLWwQrpGsYc/l8BrkaQWrgbhxWCDbCFLWB+qJe6+kuAm6MFNuLXxBFm
      A1t4EskvNXP4i2rgKhGphex2WIT0F7JgfijeunouAdOee4VlT4RyXyBgC8H+rEVv+x90+N3o
      6Nb5o4sfZq5iyfSAkW5lTBsfPJ2FqzYR21HEt8O4kPofgKBggoc8RvNWFFJSO5tIayJc+Jma
      3gU8OXdwNJBpYWE019XTSRDB1xdSWFLL7EiLiUPn9/1JsyeXDR96WOqMY4bfjY5ifTV8/vUk
      4pdMRU//f0MwT0VNoqrmcv/Xzl8ozkonZeAWKft0G4N3SH1N35GVnnKHi2BfHfkpi4lanoFn
      cjIujwvHPzpTfdTlp7A4ajkZnskkuzy4biwMDCR4yjyscDhzvPza2uJu0VLM7s9gxaaXeUTP
      /v9ADZ++s4PCijZ6gL6u33HnpJNTDlTmkPlTOMmZe27/KsSteTmZsZad3kRchxzMGjrTjMeY
      M/4wldWwaC6Aj98aGgidNZNgwHsyg7U7vSS6DuGYdasWbDww3cKRlkhJ/HHKty5ikf/NjjqV
      XxZx9nQf604M3evGWRrL1i1LmDJSjY1pnbhPtzEv4UHgIj0PLePdXS8w9cbDamzcO7jt9wqk
      MU+SIq4tbK93s0VwnOyvFRFplLykCEm8aWGjHMs7IpUNl6VbRKS3U6qzkyQybr/U+t3oGFF2
      QBfBwzR0EezrarphEdwlZ7LelB1f/SpdPhGRHulocEvZBRHxnRXXe1nyfVOX+H8FOH+OKmqp
      irfYM2T37JR8XI4ZRGzYR/LbqSQ+k4nv/sd5MTOLNeEA5zlXBbVV8VjXF5LvSmBqUCk7nR9x
      tvUKvUzg4fnPk5m1hnC/G1V3Lzf7nG4AAiaEMG/xStJjwgkCIIinHaup/3gvG/Ov0BMwgZBH
      o4h/dSEEzGHFay3s37tRX4ZTZtMnwcpofwFVhdfp4prZGgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q8' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q9' width='192'>
      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
      pwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Segement wise sales' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='64' name='Sheet 27' width='192'>
      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
      GAxr839on5DPsfOT0AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 5 products' width='192'>
      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
      E9ir0CU+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Avg' width='124'>
      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
    </thumbnail>
    <thumbnail height='50' name='Total orders' width='84'>
      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
    </thumbnail>
    <thumbnail height='192' name='Year wise sales' width='123'>
      iVBORw0KGgoAAAANSUhEUgAAAHsAAADACAYAAAAkyhzJAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAahElEQVR4nO2deVhUVf/APw0wbLIvisBggoAsiumAiqQCIbhiG2pulaU+trz59mZ7lv4s
      rdd6sz17E3EjM3fc3zBFNk1wQaXBhYBRQRhElhmY8ffHgCEMgqOWdu/neXge5t5zvud772fO
      uefeOQP3Xb169SoigkDyVycg8uchyhYQomwBYdpyw5ryNX9FHiJ/AmLPFhCibAEhyhYQomwB
      IcoWEKJsASHKFhCibAFxm2TLWOoUTs7tCSZyhxB7toBo9bi045hw8X8BbPy0Bxn7pNQAe7o/
      TNdeF4l64RiRD6qwaIq+O5zxCZ7th5Qf5+PtR+licKeEks9i+ec7to2vf2fOpTRC2spt6wMk
      fuLJyV/1uVm5V+E/opC4544T5K67VjJn9jgWJkJU8hqmRTcLofLm0yA56bVqopJTmBatbj//
      uxwjZZuT80ocH39ngab55kopJfs8SNrnQUnLk9cRzHSYtLXvdE+WfmDb1t4/aHBgx+PRLNt7
      faSaYht+/SaQKq9CgmZUthPEmtQZfUmvBeens5n4NxANRsrWpvXh6+8s0HiUMumrTCLljqzo
      7Em/koM4p/my7QP/6ytEp7H6UlvR7EiJjSMpW8eApxS4GCxjTerrgZyorWfIyiOYPNGXPQbL
      STg1f4hetF0F8UszGfOgCgtTCXWX7Dm71ZuD1u2v1Ti/NILvd0nA4zTPLSjCot0a9wZGyVbs
      ckcFBM/OYPiAasBRv8NcjUfkUZ6JzKO+g51Bm9aTzdmAx1mGjTJcqXq9nO93SbCfkMXEWB2r
      2wqm9GPdEnOwVDFpxy6G92garnVYOJXjP7kc/7bqNnE6kG/m2qOhmkeTDuJ3Cxe6u407NEHT
      YmbekXLWpC7u1vjGOW74xKq6seL1Lmhci5k27yzWN4h2fuP9HAXspx5hWA/dDUq2TcqLgZyo
      hR7v7ie+l3Ex7laMku3VtwwpcHRxf1LSrak3snFtRiAbUgHX3xn+SLWBEmYcXdCH1Iv1DPk4
      i772N4pmxpmDtoCO0OiStq/9N0RC8gEJyPOYMaPCyBh3L0YNUhajMnhpynAWJrqQNHIUyS71
      mFKFXYY9/v2azcJviBmHlnWjDJA9e5KQTq1LaDP68M135thPyGBibHvXBSsqigCqsdN4kvKa
      Hwe2OlBQbAJocYpQMvaNQwyR1xqUuCdhnH4eYKli0pJjdP0bDd9NGDmMqwlZnML8xUX42IGm
      1IwaHPlpRCxP+o5g+Vbb9nt7XhDr1krAUskjzxiYvTW4sOFf3SnrwPCtR4KuHsCGtePDSfrG
      uVE0gAmX9nmwNHYU//eVA9p2IpmY/L2G7yZu4ZqtxnvKfuadXssXn1yEnhU84K+FShu2TY7l
      /RueVDNylnanEJC9kEffVr1aQslXcn7M0zFgQXvDdxM6JGYA9fg/n8s7BzbxXckaVl9aw4rC
      7cx++gpSJJx4Q06qsnXtqOQ1rL70A9Tas+p1f8o7ehruIW7DBE2Lg5saQk/wr7R1fL3yd5yR
      cOKNfuwrbaOK0oeURDOwvETcpNLWw2qpLyvesQUkpE8by3incc1+Bjbednmy0Gkc452Gk3Ia
      4ComZgC1yCefwN+vBqvGSaKJtQr5ol08MxLAkeMZZm0kpiPGAzS7erF0Zftjyb3GbZ6N67CN
      zWLCWAAnFLmGm8z7PKBx1nycCDcDRarMuHLTbV+mW996wBZFriGZanwGXAag7IJVm1EeX1iM
      PRIOz5GTrrrpJO5qjJiGWHFquy1u0eexNVhbSk0FQD2WBiZdKH3ZsswMKOfRWW3Mmrsf5b1L
      R9toX8ZSp4HsMfC41OehYuyXdCN9cTCjR/1Kt+vyM0eRrp+t3+/f9hM069gspk0YyUerurD8
      rW70WtKR+cK9gRE924yCT4Yw3Xc0Sz6+nzPnzK9NxrTV9uS+G8HyVMC1mD79Wjd3NqkHh2tB
      +piCcEO9+hYwCT9KwkM6yPNl3uP9yC0wQwtoqztxctFQvt0CuBYSNuhGUdT0nZfDAEtQrerL
      iu0demBwT2BEz76KlZ0WKq04MD+MA/ObtnsyMbHxV8s6YpYcJqBl9Cvd2PqpNVDN2BdO34HH
      kNUM+SoDxeCB7NnrwwehPtfvbiuvltgXMHFhdw694ETqnH6E9U8jpEOTxLsbI3r2ZYYk/8QX
      ezKZNKmCru5/zLmlLnUETjrOq2mbebLVhwcSzn4RyP5akI7N46GAW0u8TewLmZaVwuyXyvBu
      ys2yHq9hBcw2mJdhHJ/IYsJAHRR58t17Mgw98rnXuK/ltziN+kbI7nDGp/zO6sWFtysvkTuA
      uHhBQIiyBcTtGcZF7gnEni0gRNkCQpQtIETZAkKULSBE2QLCyMU3Oir372bLpydQqnSYe95P
      /znDkftKb292txHd4V2sOhzMhKe6/PEOL8okOcmBMa/53oHn9A1c3LiFzYlnqLgC5p7uBD05
      jMGD7G7cw4oySVzlxJRXfG5UyiiMkq3J3smaZCvivpiFzFmC5mIRv52rAf5i2ekppDCc4QNa
      75L06U/Q2u0cKX2MEBcADYpVZ+k2KeyOrAvXHf6ZLbnePLwmHgepDk3hGbK2nUM1qFfTwus/
      HSOG8SqOra1l0IIHkTmbAhKkrjIC5Xf7x0I29Epw5NfV59ABuvwMMiz6I/e4M61dPn0Bl8hA
      HKQAEqQybwZN/+tEgzE9W6uk2NKXYTaGdipImXmJ/l+GNR5UOZkzM3D6cjg+gGJRCvwzlCvz
      1rP3gDsjdg7HMTmF38Ij6bJ1LZs26gj9ZgphbpXkf7aJHTsuoDa1QvboGEZPdscCUCz6kSI/
      S4pXKvSXkN6DGP+BHNW/P2LDboA88gC8I3jqWh56JL3DCfvpR7KLHDFfdoGglx78491eVUzm
      v1M4cESC76xHiYuyQ0I1pz/bwPadSmrqwMzNh8HvjSbES6I/1kUQm3CFTW/vRRE4gpebDb32
      YX5UzlnDz9VD6ftgZ2wtm/erCxyas4UDRytQN5hg7hvC6PeH4mXgnNblZbJ9YQYKpQ5zT18i
      F8QR2FkCVef4+bVN5OSr0VpY4TbhEZ4Y1/mG6m5etrKCcmsnIwfsGvL/sxvJ0EeZNdcBU6Ac
      LRdXbaXIayhPb/bAygSqNmZRMjiemS/aYKrVcH7letJyE4jqDaBCVdeH2MQ4nKR1nFy0mQKl
      nLBXXubliLaHcT0W9HxCRuKcVdw3MI7J175rpOPcD7lYPDWFl7qoyfv3Ho70iSfE0Qy72Bie
      etYFCyk0lB1m8/KzhMzurq9Wmc/OTyX4vz+L+JZrjz3kjPvQkYxvUkj8zxUsQvsz/J9huNsA
      WCF78jGCe9giNdGhyUll204VXo+0GB2158jaYkHEV88TbymhoSyPbZ8fods7IdTvzKBq7NO8
      GGWFRFNHaVn7q/dvXrabA47VajQYc4Wuxio2gSEBza+SNTT0jmXssKaJSzUFabkc/DyXg81K
      uZiXQ29HoCtBCd44AWCFa3cb2vuaXnMkvv0J9bmIbrKs2TWsCEVKHoeT89jVuCVgCIQMMOXq
      mSzWva5AqWo8md4RlNNdP2KUWxG8aEijwNaYdvVm0FxvBmnqKE1PZev7OTyyIAQbzKjJ3MSm
      14upuNL4mXu0DGgh+5iCI7sPk7V7V7ONAfQkBJ+w7lx+YRmr93nj9UBPAmNl7R77zcs2ccO9
      dje/VQUS2MZBto0LHgEtp0M2dA1sPkOtp77Wj9HbRuF7R76SIcXc2gquy72Betdwpq4bgHPz
      zcpD/LzfQz+KWDYO3TObrXG/36NN0dc3aYHL4BgGHtjOBUKwyU5ln6Y/j6+RYSOlcQZuoJ6m
      HpupU3lugnPrfR5yJq7xR5lTgvJENutnFTLy20G43iANIyZoNgQ9Zsn+13+hsKwB0KG5WMjx
      bBUgQVJXTY0G0NRRujeL4+duNr49XvIL/PK5gioN1+Ln53ZsrUjJsWIaAJ2mgY4v9ffAy+0w
      e9adBxqoO3MShQLQNHCfmwM2Ugm62ssod+RT0sGIql17ycxRUadBH/NEJlmnbbEFdOp6LDo7
      YCmFhiulFOw8S5WhIIFe2G/cw8F8jf5YNHWU7lVwAajOP4NSZU7nUD8eGB9JkOOVdlfkGnXr
      JZXHME69m03PLuHCFa7dZ4Mt/UZmszr+I9SmdshGBOHuUXHT8V2fiKffvI0si9+AusEMq54+
      DJz1UPsVewfRY+VPLIlRI+kdzZQPQ1oOjG0dET1fGsH5N3/io++0OAQHMfhf/uDchxB1El/G
      VaLr1JnAF/1wpWN/nt3Kz5maz9fx7dGKxmPoSfT8aH3PGzAAr1eXseQzNRI3H/onuGBdZihI
      T4a9ep51b35Jqqoek04OuA8bTNxgMKOMzNe2cOZ3NVoLO3q++Dit1ne2QPw8W0CIj0sFhChb
      QIiyBYQoW0CIsgWEKFtAiLIFhChbQIiyBYQoW0CIsgWEKFtAiLIFhChbQIiyBYQoW0CIsgWE
      KFtAiLIFhChbQIiyBYQoW0CIsgWEKFtAiLIFhChbQIiyBYQoW0CIsgWEKFtAiLIFhChbQIiy
      BYQoW0CIsgWEKFtAiLIFhChbQIiyBYQoW0CIsgWEKFtAiLIFhChbQIiyBYQoW0CIsgWEKFtA
      iLIFhChbQIiyBYQoW0CIsgWEKFtAiLIFhChbQIiyBYQoW0DcJtkyljqFk3N7goncIcSeLSCM
      +i+7eky4+L8ANn7ag4x9UmqAPd0fpmuvi0S9cIzIB1VYGIqutiX7w1A2/uBAQbEJoMXpgQrk
      j5xk5LQinAxmZEJFui8/zg9gf0YtCdkpDO/egRQbHNgychgrsxtfTznA6sWF1xXJmT2OhYkQ
      lbyGadHNdqi8+TRITnqtmqjkFKZFqzvQ4N2NkbLNyXkljo+/s0DTfHOllJJ9HiTt86Ck5ckD
      tL8F8sGwYI5d96/sTbj0qzPbf+2FS0zRdRK11fYcSwpi/SddOVXaNAjVdjjL88vCWJvdfrnW
      WJM6oy/pteD8dDYT/waiwUjZ2rQ+fP2dBRqPUiZ9lUmk3JEVnT3pV3IQ5zRftn3g37pSgxtr
      HtWLthqs4IUPcwnyrsekwYyqAmey18owb5HN0bdiWZgIWNbR66VCHDf7kqroYJJKf5bPtUfj
      WszL7+n4aIZnh4/v/NIIvt8lAY/TPLegCIsO17y7MUq2Ypc7KiB4dgbDB1QDjvod5mo8Io/y
      TGQe9S06Q/nKYLYUgXTgceb9cJSuTS2b1mPjpyTyTWWrdkxsKolcnMuj40pwMLcjZb9vBzM0
      J/2tXhyurWfI0iz6mrb3b8SbcTqQb+bao6GaR5MO4ncLF7q7jTt0KFrMzJu/tiNjtSNQT/Sr
      x/8Q3Q7B724j2IjWq7eHsny9BPsJWUyMVcPujtdNeTGQE7XQ4939xPfSGdH63YtRs3GvvmVI
      gaOL+5OSbk19exWuOKPIBiyVhITf4RN4xYMf5rijci1m2ryzWN9UZQnJByQgz2PGjApM7lCK
      fxVG9WyLURm8NGU4CxNdSBo5imSXekypwi7DHv9+BmbhF60oA/Cro+F/wSQulZGdYcOlSsBO
      Q+DoEyS8eYoezrf6RpBw6iM5O4vqGbIyi772Ha+5J2EcewAsVUxacqzDo8+9hJH32WpCFqcw
      f3ERPnagKTWjBkd+GhHLk74jWL7V9vrerr0PLUCOL4seC2T7jkbRAJVSjif15u2QGFJ+u7Xb
      fu2REP67xBz7CYf0w7eRmJj8vYbvJm7h7KrxnrKfeafX8sUnF6FnBQ/4a6HShm2TY3n/Kwe9
      YACTq/oh0bWSkR/v5cMT61l+aQ2rL/3A91mZxATroNaepFf9KDc2nQYHtr3iS6HleSbf9PCt
      v89efekHqLVn1ev+xudxF3MbnqBpcXBTQ+gJ/pW2jq9X/o4zEk680Y99pY1FTHX664VXEVGT
      lXi4qjEDQIeF9xme3HAYOUBqZ05dMS6LyuR++ocntV341Hsc452a/SQ03nYlDtS/jg3mvMEo
      OmI8QLOrF0tX3uzb5e7nNj8u1WEbm8WEsQBOKHIbN8vK8XYFsp04Y0im/UX85QBWVFw0ruXa
      KjPjKrbg8YXF2CPh8Bw56arbEvKuwYhpiBWnttviFn0eW4O1pdRUANRj2alp2wX6PFLPli+7
      sOELF0JfKb1+pqty5WQ2YKnCsyOPQQ3QZUYKq2e0sXN3uL53G3hc2hLr2CymTRjJR6u6sPyt
      bvRacvOXhLsVI3q2GQWfDGG672iWfHw/Z86ZX5uMaavtyX03guWpgGsxfa49y9ARMOs4fSyh
      cOEQPvg/T5TVEkBCXXFX1k3qQzZgP/UsAbfhoG4NNX3n5TDAElSr+rJiu3n7Ve4RjOjZV7Gy
      00KlFQfmh3FgftN2TyYmNv5qWUfMksMENI/udpJZy5x4NcGTY4vDmb34+qjS7oVMf7nkjx5/
      Opi35YH81qp9W5Lk40hqeik/zsfbj9Ll5g+kbewLmLiwO4decCJ1Tj/C+qcRchO3cXcrRvTs
      ywxJ/okv9mQyaVIFXd2vzbmRutQROOk4r6Zt5kkDHx5YR6ex+NdM4odV4WTXVKeaB17K5MP9
      B+6qE+r4RBYTBuqgyJPv3pNR/VcndBu47+rVq1ebb1hTvubmo+wOZ3zK7+1eD0X+WsTFCwJC
      lC0gbs8wLnJPIPZsASHKFhCibAEhyhYQomwBYdyCw0UfsaFpXZepOQ6hEYx5KwTne3AdT9XG
      ZHZ3GsPYKP0aUk16CuvPhPLYBOc70xO0NZxZup5tW5XU1Jlh1dOH/tOjeCCgnTWs6SkkFvZn
      SoKj0U0bufgmgPidw/EB0FRRuGIj65a6MH26u9GJtEZBSkw+vk3t3CFsRg7AdlYahUOikJnA
      4fXQd+4dEg1UbdlMmtlgpq73wMqkgaqTJ0g7WAIBRn7cdxPc+jFJbZA99SA+BUW3eXWHD8Pv
      sGgATGSEjiwjfUsVAGfDI/CxunPNlRbU4R3lgZUJgCk2/sHETrzzovWt3WbKk1P4LTySLlvX
      smmjjtBvphDmVkn+Z5vYseMCalMrZI+OYfRkdywK9rNiqycTXvBqfNdpOLFgB/xjFD2tFKTM
      vET/L8NwBHQX8tk9bwfH89XQqTOBs0cTPcgOCdeXg3IyZ2bg9OVwfNBRtmUT679RUFlngrmn
      PzEfxuHXYiS0iRuM2z/2oYgMYsBI2bXtzduU2MvoO3c0gwIsgGpOf7aB7TuV1NSBmZsPg98b
      TYiXBIoySUnrQaRvLmvn5aBLmHLd0OsR0Zld8zYhmTaA3g+4YCFtlojiED+8f4Di39VoTc3p
      PGY0j033Mvglhbq8TLYvzECh1GHu6UvkgjgCO0vQncth09t7USjrMenkgP8/xhH3oP4T+VuX
      ramicMUvFAbFEAWUo+Xiqq0UeQ3l6c36d3DVxixKBscz80UbTLUazq9cT1puAlG9exNQmsHv
      Wi+8TIDyPE516sXoVj2rnOz5WVhMm8rzITZQVsiBdzeT3W0iYR43Su4sB7c6MerHeLpIdWgu
      VlBr6MyZdCE0Xk3ijB1MX/lM48YqcpJL8J87kxhnU3S150l/J43CRVHIMMMuNoanntXLaig7
      zOblZwmZre+h2tMZbD3mxND/voiH/fWDp1QewySH4+xfspav39PiOGwYo5/zxc4EsJcR8X4w
      nV2lSLQaCr/dxlGlF3K3Fvlqz5G1xYKIr54n3lJCQ1ke2z4/Qrd3QriwLhenN2YR72uKrvYy
      FZf/WMFjpOw8NsTk6X+1sMItKpqHn3Nt3FdDQ+9Yxg6za+yt1RSk5XLw81wONovgYl4OvR3x
      C1Ox+xcNXkOlVO07jc3gh1tfW5QF/NY1lAkhNvp9zjIGJdixKlPVjmwPfHvsYu1MJffLvfCJ
      DsbX1XBJi6gB9Ew5+ceG8gJ+23KQ/225LmtMi0DmYcrVM1mse12BUtW4dMM7gnK64wjU1HkS
      OzdYL7AVEqx8gon5TzDRtZcp2rSD9V9ZMHmWDIl5DQXzN/Hj0QrUDfrSAb2BlrKPKTiy+zBZ
      u3c12xhAT0KQRXRm16uJKOXd8QoPIDjc9lqJW5+gtcKGroF2zYTVU1/rx+hto/A1cPDWkUFI
      PilAM9SJ3ExXgscYl5FhpHSf/QzTC4s4c1LJ2c+SODXmScYMlRosa97Z8o+X6nrqh45m9mu+
      Bt58h/h5vwexiXE4WUqg8VLShE2Aexuir0diaYssYSh+7xegQobq2300jH+cmQttMAXKkxPJ
      MFRRU4/N1Kk8N8G59T55LM+svERRthLlr3tISu3Dk2/3RMqfcp9tj5f8Ar98rqBKA6BDc7GQ
      /NzG5QBWfvTqdIq87Hwuh/XGYMdz86ZHSRb7c6poABrKCtmfXEmPMHtAgqSumhoNoKmjdG8W
      x881VSznXMYldF1k+MXIiRjXDcprOpa2mxfd8n9hT4a+TbQaLufkU1gOaBq4z80BG6kEXe1l
      lDvyKeng2Ti7Zicnz9Sg0TbG3JvFkXpbOqGjQW2BnYclpjRQd6aAY4eqDAcJ9MJ+4x4O5mvQ
      0XTcCi4A5YcLuKS1Q/ZgEPKpYXTjCk1H/Kd878H1iXj6zdvIsvgNqBv095YDZz3UuFeCZ4Q1
      W98opn/ioDYiOCJ/M5Td85axpNkEbZAHQDf6jcxmdfxHqE3tkI0Iwt2jorGeGfWZ2/jvAiU1
      dSaY95bz8NsdXQ7jysC5/dj03jKWvK1Ga2GFW/hAop4HHPsQok7iy7hKdJ06E/iiH65cbTci
      gJOfHb98sowdJ2qoNzXHITSUkf/U9zyfCV6sfXYJe65IsBvYn9Du1hhcWW3Vk2Gvnmfdm1+S
      qtJPxNyHDSZuMFBXwLantqBU1WPSyRP5/DE0HbH4EaeAEB+XCghRtoAQZQsIUbaAEGULCFG2
      gBBlCwhRtoAQZQsIUbaAEGULCFG2gBBlCwhRtoAQZQsIUbaAEGULCFG2gBBlCwhRtoAQZQsI
      UbaAEGULCFG2gBBlCwhRtoAQZQsIUbaAEGULCFG2gBBlCwhRtoAQZQsIUbaAEGULCFG2gBBl
      CwhRtoAQZQsIUbaAEGULCFG2gBBlCwhRtoAQZQsIUbaAEGULCFG2gPh/ERcAdy4u4k4AAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='86' name='YoY growth' width='162'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
